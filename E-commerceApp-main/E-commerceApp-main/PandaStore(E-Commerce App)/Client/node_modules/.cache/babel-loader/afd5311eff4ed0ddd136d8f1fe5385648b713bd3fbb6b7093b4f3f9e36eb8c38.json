{"ast":null,"code":"\n// import React, { Component } from 'react';\n// import './Account.css';\n// import logo from './logo.png';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       shippingAddresses: [\n//         {\n//           id: 1,\n//           address: '123 Main St, City, Country',\n//         },\n//         {\n//           id: 2,\n//           address: '456 Elm St, City, Country',\n//         },\n//       ],\n//       newAddress: '',\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   handleNotificationToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         receiveNotifications: !prevState.settings.receiveNotifications,\n//       },\n//     }));\n//   };\n\n//   handleDarkModeToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         darkMode: !prevState.settings.darkMode,\n//       },\n//     }));\n//   };\n\n//   handleLanguageChange = (e) => {\n//     const newLanguage = e.target.value;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         language: newLanguage,\n//       },\n//     }));\n//   };\n\n//   handleEmailPreferenceChange = (e) => {\n//     const preference = e.target.name;\n//     const value = e.target.checked;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         emailPreferences: {\n//           ...prevState.settings.emailPreferences,\n//           [preference]: value,\n//         },\n//       },\n//     }));\n//   };\n\n//   toggleChangePassword = () => {\n//     this.setState((prevState) => ({\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\n//     }));\n//   };\n\n//   handlePasswordInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       changePassword: {\n//         ...prevState.changePassword,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   handleChangePassword = () => {\n//     // Add logic to handle password change\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\n//     if (newPassword === confirmPassword) {\n//       // Update the password\n//       // You can add your own password change logic here\n//       console.log('Password changed successfully');\n//     } else {\n//       console.error('New password and confirmation do not match');\n//     }\n//   };\n\n//   // Methods for handling shipping addresses\n//   addShippingAddress = () => {\n//     const { shippingAddresses, newAddress } = this.state;\n//     const newId = shippingAddresses.length + 1;\n//     const newShippingAddress = {\n//       id: newId,\n//       address: newAddress,\n//     };\n//     this.setState({\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\n//       newAddress: '', // Clear the input field\n//     });\n//   };\n\n//   deleteShippingAddress = (id) => {\n//     const { shippingAddresses } = this.state;\n//     const updatedShippingAddresses = shippingAddresses.filter(\n//       (address) => address.id !== id\n//     );\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\n//   };\n\n//   handleNewAddressChange = (e) => {\n//     this.setState({ newAddress: e.target.value });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n//         <header>\n//           <h1>\n//             <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\n//             <i>Panda Shop</i>\n//           </h1>\n//         </header>\n\n//         <nav>\n//           {/* ... Navigation links */}\n//         </nav>\n\n//         <div className=\"user-profile\">\n//           <h2>User Profile</h2>\n//           <p>Name: {this.state.user.name}</p>\n//           <p>Email: {this.state.user.email}</p>\n//           <p>Address: {this.state.user.address}</p>\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\n//           {/* Add more user information fields */}\n//         </div>\n\n//         <div className=\"settings-icon\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"change-password-section\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//               üîí Change Password\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//               <label>\n//                 Current Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"currentPassword\"\n//                   value={this.state.changePassword.currentPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 New Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"newPassword\"\n//                   value={this.state.changePassword.newPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 Confirm Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"confirmPassword\"\n//                   value={this.state.changePassword.confirmPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <button onClick={this.handleChangePassword}>Change Password</button>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"shipping-address\">\n//           <h2>Shipping Addresses</h2>\n//           <ul>\n//             {this.state.shippingAddresses.map((address) => (\n//               <li key={address.id}>\n//                 {address.address}\n//                 <button onClick={() => this.deleteShippingAddress(address.id)}>\n//                   Delete\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter a new address\"\n//               value={this.state.newAddress}\n//               onChange={this.handleNewAddressChange}\n//             />\n//             <button onClick={this.addShippingAddress}>Add Address</button>\n//           </div>\n//         </div>\n\n//         <footer>\n//         <p>Contact us at support@example.com</p>\n// <p>&copy; 2023 Your E-Commerce App</p>\n//         </footer>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;","map":{"version":3,"names":[],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["\r\n// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import logo from './logo.png';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       shippingAddresses: [\r\n//         {\r\n//           id: 1,\r\n//           address: '123 Main St, City, Country',\r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           address: '456 Elm St, City, Country',\r\n//         },\r\n//       ],\r\n//       newAddress: '',\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   handleNotificationToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         receiveNotifications: !prevState.settings.receiveNotifications,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleDarkModeToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         darkMode: !prevState.settings.darkMode,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleLanguageChange = (e) => {\r\n//     const newLanguage = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         language: newLanguage,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleEmailPreferenceChange = (e) => {\r\n//     const preference = e.target.name;\r\n//     const value = e.target.checked;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         emailPreferences: {\r\n//           ...prevState.settings.emailPreferences,\r\n//           [preference]: value,\r\n//         },\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   toggleChangePassword = () => {\r\n//     this.setState((prevState) => ({\r\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n//     }));\r\n//   };\r\n\r\n//   handlePasswordInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       changePassword: {\r\n//         ...prevState.changePassword,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleChangePassword = () => {\r\n//     // Add logic to handle password change\r\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n//     if (newPassword === confirmPassword) {\r\n//       // Update the password\r\n//       // You can add your own password change logic here\r\n//       console.log('Password changed successfully');\r\n//     } else {\r\n//       console.error('New password and confirmation do not match');\r\n//     }\r\n//   };\r\n\r\n//   // Methods for handling shipping addresses\r\n//   addShippingAddress = () => {\r\n//     const { shippingAddresses, newAddress } = this.state;\r\n//     const newId = shippingAddresses.length + 1;\r\n//     const newShippingAddress = {\r\n//       id: newId,\r\n//       address: newAddress,\r\n//     };\r\n//     this.setState({\r\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n//       newAddress: '', // Clear the input field\r\n//     });\r\n//   };\r\n\r\n//   deleteShippingAddress = (id) => {\r\n//     const { shippingAddresses } = this.state;\r\n//     const updatedShippingAddresses = shippingAddresses.filter(\r\n//       (address) => address.id !== id\r\n//     );\r\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\r\n//   };\r\n\r\n//   handleNewAddressChange = (e) => {\r\n//     this.setState({ newAddress: e.target.value });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n//         <header>\r\n//           <h1>\r\n//             <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\r\n//             <i>Panda Shop</i>\r\n//           </h1>\r\n//         </header>\r\n\r\n//         <nav>\r\n//           {/* ... Navigation links */}\r\n//         </nav>\r\n\r\n//         <div className=\"user-profile\">\r\n//           <h2>User Profile</h2>\r\n//           <p>Name: {this.state.user.name}</p>\r\n//           <p>Email: {this.state.user.email}</p>\r\n//           <p>Address: {this.state.user.address}</p>\r\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\r\n//           {/* Add more user information fields */}\r\n//         </div>\r\n\r\n//         <div className=\"settings-icon\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"change-password-section\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//               üîí Change Password\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//               <label>\r\n//                 Current Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"currentPassword\"\r\n//                   value={this.state.changePassword.currentPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 New Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"newPassword\"\r\n//                   value={this.state.changePassword.newPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 Confirm Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"confirmPassword\"\r\n//                   value={this.state.changePassword.confirmPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <button onClick={this.handleChangePassword}>Change Password</button>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"shipping-address\">\r\n//           <h2>Shipping Addresses</h2>\r\n//           <ul>\r\n//             {this.state.shippingAddresses.map((address) => (\r\n//               <li key={address.id}>\r\n//                 {address.address}\r\n//                 <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter a new address\"\r\n//               value={this.state.newAddress}\r\n//               onChange={this.handleNewAddressChange}\r\n//             />\r\n//             <button onClick={this.addShippingAddress}>Add Address</button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <footer>\r\n//         <p>Contact us at support@example.com</p>\r\n// <p>&copy; 2023 Your E-Commerce App</p>\r\n//         </footer>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\OneDrive\\\\Desktop\\\\E-commerceApp-main\\\\E-commerceApp-main\\\\PandaStore(E-Commerce App)\\\\Client\\\\src\\\\pages\\\\Account.js\";\n// import React, { Component } from 'react';\n// import './Account.css';\n// import logo from './logo.png';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   handleNotificationToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         receiveNotifications: !prevState.settings.receiveNotifications,\n//       },\n//     }));\n//   };\n\n//   handleDarkModeToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         darkMode: !prevState.settings.darkMode,\n//       },\n//     }));\n//   };\n\n//   handleLanguageChange = (e) => {\n//     const newLanguage = e.target.value;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         language: newLanguage,\n//       },\n//     }));\n//   };\n\n//   handleEmailPreferenceChange = (e) => {\n//     const preference = e.target.name;\n//     const value = e.target.checked;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         emailPreferences: {\n//           ...prevState.settings.emailPreferences,\n//           [preference]: value,\n//         },\n//       },\n//     }));\n//   };\n\n//   toggleChangePassword = () => {\n//     this.setState((prevState) => ({\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\n//     }));\n//   };\n\n//   handlePasswordInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       changePassword: {\n//         ...prevState.changePassword,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   handleChangePassword = () => {\n//     // Add logic to handle password change\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\n//     if (newPassword === confirmPassword) {\n//       // Update the password\n//       // You can add your own password change logic here\n//       console.log('Password changed successfully');\n//     } else {\n//       console.error('New password and confirmation do not match');\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n//         <header>\n//           <h1>\n//             <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\n//             <i>Panda Shop</i>\n//           </h1>\n//         </header>\n\n//         <nav>\n//           <a href=\"/\">Home</a>\n//           <a href=\"/shop\">Shop</a>\n//           <a href=\"/categories\">Categories</a>\n//           <a href=\"Account\">Account</a>\n//           <div className=\"search-bar\">\n//             <input type=\"text\" placeholder=\"Search products...\" />\n//             <button type=\"submit\">Search</button>\n//           </div>\n//           <a href=\"/Services\">Services</a>\n//           <a href=\"/aboutUs\">About Us</a>\n//           <a href=\"#\">Chatbot</a>\n//           <a className=\"button\" href=\"/login\">\n//             Logout\n//           </a>\n//         </nav>\n\n//         <div className=\"user-profile\">\n//           <h2>User Profile</h2>\n//           <p>Name: {this.state.user.name}</p>\n//           <p>Email: {this.state.user.email}</p>\n//           <p>Address: {this.state.user.address}</p>\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\n//           {/* Add more user information fields */}\n//         </div>\n\n//         <div className=\"settings-icon\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"change-password-section\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//               üîí Change Password\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//               <label>\n//                 Current Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"currentPassword\"\n//                   value={this.state.changePassword.currentPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 New Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"newPassword\"\n//                   value={this.state.changePassword.newPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 Confirm Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"confirmPassword\"\n//                   value={this.state.changePassword.confirmPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <button onClick={this.handleChangePassword}>Change Password</button>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <footer>\n//           <p>Contact us at support@example.com</p>\n//           <p>&copy; 2023 Your E-Commerce App</p>\n//         </footer>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;\nimport React, { Component } from 'react';\nimport './Account.css';\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    // Methods for handling user settings\n    // ...\n    // Methods for handling shipping addresses\n    this.addShippingAddress = () => {\n      const {\n        shippingAddresses,\n        newAddress\n      } = this.state;\n      const newId = shippingAddresses.length + 1;\n      const newShippingAddress = {\n        id: newId,\n        address: newAddress\n      };\n      this.setState({\n        shippingAddresses: [...shippingAddresses, newShippingAddress],\n        newAddress: '' // Clear the input field\n      });\n    };\n    this.deleteShippingAddress = id => {\n      const {\n        shippingAddresses\n      } = this.state;\n      const updatedShippingAddresses = shippingAddresses.filter(address => address.id !== id);\n      this.setState({\n        shippingAddresses: updatedShippingAddresses\n      });\n    };\n    this.handleNewAddressChange = e => {\n      this.setState({\n        newAddress: e.target.value\n      });\n    };\n    this.state = {\n      user: {\n        name: 'John Doe',\n        email: 'johndoe@example.com'\n        // Other user data\n      },\n\n      settings: {\n        receiveNotifications: true,\n        darkMode: false,\n        language: 'English',\n        emailPreferences: {\n          promotions: true,\n          newsUpdates: true,\n          productRecommendations: true\n          // Add more email preferences here\n        }\n        // Add other user settings\n      },\n\n      shippingAddresses: [{\n        id: 1,\n        address: '123 Main St, City, Country'\n      }, {\n        id: 2,\n        address: '456 Elm St, City, Country'\n      }],\n      newAddress: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"\",\n            width: \"150px\",\n            height: \"100px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Panda Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", this.state.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", this.state.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipping-addresses\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shipping Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.shippingAddresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [address.address, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deleteShippingAddress(address.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 17\n            }, this)]\n          }, address.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter a new address\",\n            value: this.state.newAddress,\n            onChange: this.handleNewAddressChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addShippingAddress,\n            children: \"Add Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Account;","map":{"version":3,"names":["React","Component","logo","jsxDEV","_jsxDEV","Account","constructor","props","addShippingAddress","shippingAddresses","newAddress","state","newId","length","newShippingAddress","id","address","setState","deleteShippingAddress","updatedShippingAddresses","filter","handleNewAddressChange","e","target","value","user","name","email","settings","receiveNotifications","darkMode","language","emailPreferences","promotions","newsUpdates","productRecommendations","render","className","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","placeholder","onChange"],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["\r\n// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import logo from './logo.png';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   handleNotificationToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         receiveNotifications: !prevState.settings.receiveNotifications,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleDarkModeToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         darkMode: !prevState.settings.darkMode,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleLanguageChange = (e) => {\r\n//     const newLanguage = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         language: newLanguage,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleEmailPreferenceChange = (e) => {\r\n//     const preference = e.target.name;\r\n//     const value = e.target.checked;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         emailPreferences: {\r\n//           ...prevState.settings.emailPreferences,\r\n//           [preference]: value,\r\n//         },\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   toggleChangePassword = () => {\r\n//     this.setState((prevState) => ({\r\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n//     }));\r\n//   };\r\n\r\n//   handlePasswordInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       changePassword: {\r\n//         ...prevState.changePassword,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleChangePassword = () => {\r\n//     // Add logic to handle password change\r\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n//     if (newPassword === confirmPassword) {\r\n//       // Update the password\r\n//       // You can add your own password change logic here\r\n//       console.log('Password changed successfully');\r\n//     } else {\r\n//       console.error('New password and confirmation do not match');\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n//         <header>\r\n//           <h1>\r\n//             <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\r\n//             <i>Panda Shop</i>\r\n//           </h1>\r\n//         </header>\r\n\r\n//         <nav>\r\n//           <a href=\"/\">Home</a>\r\n//           <a href=\"/shop\">Shop</a>\r\n//           <a href=\"/categories\">Categories</a>\r\n//           <a href=\"Account\">Account</a>\r\n//           <div className=\"search-bar\">\r\n//             <input type=\"text\" placeholder=\"Search products...\" />\r\n//             <button type=\"submit\">Search</button>\r\n//           </div>\r\n//           <a href=\"/Services\">Services</a>\r\n//           <a href=\"/aboutUs\">About Us</a>\r\n//           <a href=\"#\">Chatbot</a>\r\n//           <a className=\"button\" href=\"/login\">\r\n//             Logout\r\n//           </a>\r\n//         </nav>\r\n\r\n//         <div className=\"user-profile\">\r\n//           <h2>User Profile</h2>\r\n//           <p>Name: {this.state.user.name}</p>\r\n//           <p>Email: {this.state.user.email}</p>\r\n//           <p>Address: {this.state.user.address}</p>\r\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\r\n//           {/* Add more user information fields */}\r\n//         </div>\r\n\r\n//         <div className=\"settings-icon\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"change-password-section\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//               üîí Change Password\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//               <label>\r\n//                 Current Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"currentPassword\"\r\n//                   value={this.state.changePassword.currentPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 New Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"newPassword\"\r\n//                   value={this.state.changePassword.newPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 Confirm Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"confirmPassword\"\r\n//                   value={this.state.changePassword.confirmPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <button onClick={this.handleChangePassword}>Change Password</button>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <footer>\r\n//           <p>Contact us at support@example.com</p>\r\n//           <p>&copy; 2023 Your E-Commerce App</p>\r\n//         </footer>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\nimport React, { Component } from 'react';\r\nimport './Account.css';\r\nimport logo from './logo.png';\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'johndoe@example.com',\r\n        // Other user data\r\n      },\r\n      settings: {\r\n        receiveNotifications: true,\r\n        darkMode: false,\r\n        language: 'English',\r\n        emailPreferences: {\r\n          promotions: true,\r\n          newsUpdates: true,\r\n          productRecommendations: true,\r\n          // Add more email preferences here\r\n        },\r\n        // Add other user settings\r\n      },\r\n      shippingAddresses: [\r\n        {\r\n          id: 1,\r\n          address: '123 Main St, City, Country',\r\n        },\r\n        {\r\n          id: 2,\r\n          address: '456 Elm St, City, Country',\r\n        },\r\n      ],\r\n      newAddress: '',\r\n    };\r\n  }\r\n\r\n  // Methods for handling user settings\r\n  // ...\r\n\r\n  // Methods for handling shipping addresses\r\n  addShippingAddress = () => {\r\n    const { shippingAddresses, newAddress } = this.state;\r\n    const newId = shippingAddresses.length + 1;\r\n    const newShippingAddress = {\r\n      id: newId,\r\n      address: newAddress,\r\n    };\r\n    this.setState({\r\n      shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n      newAddress: '', // Clear the input field\r\n    });\r\n  };\r\n\r\n  deleteShippingAddress = (id) => {\r\n    const { shippingAddresses } = this.state;\r\n    const updatedShippingAddresses = shippingAddresses.filter(\r\n      (address) => address.id !== id\r\n    );\r\n    this.setState({ shippingAddresses: updatedShippingAddresses });\r\n  };\r\n\r\n  handleNewAddressChange = (e) => {\r\n    this.setState({ newAddress: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"account-container\">\r\n        <header>\r\n          <h1>\r\n            <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\r\n            <i>Panda Shop</i>\r\n          </h1>\r\n        </header>\r\n\r\n        <nav>\r\n          {/* ... Navigation links */}\r\n        </nav>\r\n\r\n        <div className=\"user-profile\">\r\n          <h2>User Profile</h2>\r\n          <p>Name: {this.state.user.name}</p>\r\n          <p>Email: {this.state.user.email}</p>\r\n          {/* Add forms and UI elements for editing user information */}\r\n        </div>\r\n\r\n        <div className=\"settings-icon\">\r\n          {/* ... Settings dropdown */}\r\n        </div>\r\n\r\n        <div className=\"shipping-addresses\">\r\n          <h2>Shipping Addresses</h2>\r\n          <ul>\r\n            {this.state.shippingAddresses.map((address) => (\r\n              <li key={address.id}>\r\n                {address.address}\r\n                <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter a new address\"\r\n              value={this.state.newAddress}\r\n              onChange={this.handleNewAddressChange}\r\n            />\r\n            <button onClick={this.addShippingAddress}>Add Address</button>\r\n          </div>\r\n        </div>\r\n\r\n        <footer>\r\n          {/* ... Footer content */}\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
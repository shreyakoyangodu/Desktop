{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\OneDrive\\\\Desktop\\\\E-commerceApp-main\\\\E-commerceApp-main\\\\PandaStore(E-Commerce App)\\\\Client\\\\src\\\\pages\\\\Account.js\";\n// import React, { Component } from 'react';\n// import './Account.css';\n// import logo from './logo.png';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       shippingAddresses: [\n//         {\n//           id: 1,\n//           address: '123 Main St, City, Country',\n//         },\n//         {\n//           id: 2,\n//           address: '456 Elm St, City, Country',\n//         },\n//       ],\n//       newAddress: '',\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   handleNotificationToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         receiveNotifications: !prevState.settings.receiveNotifications,\n//       },\n//     }));\n//   };\n\n//   handleDarkModeToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         darkMode: !prevState.settings.darkMode,\n//       },\n//     }));\n//   };\n\n//   handleLanguageChange = (e) => {\n//     const newLanguage = e.target.value;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         language: newLanguage,\n//       },\n//     }));\n//   };\n\n//   handleEmailPreferenceChange = (e) => {\n//     const preference = e.target.name;\n//     const value = e.target.checked;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         emailPreferences: {\n//           ...prevState.settings.emailPreferences,\n//           [preference]: value,\n//         },\n//       },\n//     }));\n//   };\n\n//   toggleChangePassword = () => {\n//     this.setState((prevState) => ({\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\n//     }));\n//   };\n\n//   handlePasswordInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       changePassword: {\n//         ...prevState.changePassword,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   handleChangePassword = () => {\n//     // Add logic to handle password change\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\n//     if (newPassword === confirmPassword) {\n//       // Update the password\n//       // You can add your own password change logic here\n//       console.log('Password changed successfully');\n//     } else {\n//       console.error('New password and confirmation do not match');\n//     }\n//   };\n\n//   // Methods for handling shipping addresses\n//   addShippingAddress = () => {\n//     const { shippingAddresses, newAddress } = this.state;\n//     const newId = shippingAddresses.length + 1;\n//     const newShippingAddress = {\n//       id: newId,\n//       address: newAddress,\n//     };\n//     this.setState({\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\n//       newAddress: '', // Clear the input field\n//     });\n//   };\n\n//   deleteShippingAddress = (id) => {\n//     const { shippingAddresses } = this.state;\n//     const updatedShippingAddresses = shippingAddresses.filter(\n//       (address) => address.id !== id\n//     );\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\n//   };\n\n//   handleNewAddressChange = (e) => {\n//     this.setState({ newAddress: e.target.value });\n//   };\n\n//   // Methods for handling payment info\n//   handlePaymentInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       newPaymentInfo: {\n//         ...prevState.newPaymentInfo,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   addPaymentInfo = () => {\n//     const { paymentInfo, newPaymentInfo } = this.state;\n//     const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\n//     this.setState({\n//       paymentInfo: updatedPaymentInfo,\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     });\n//   };\n\n//   deletePaymentInfo = (index) => {\n//     const { paymentInfo } = this.state;\n//     const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\n//     this.setState({ paymentInfo: updatedPaymentInfo });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n//         <header>\n//           <h1>\n//             <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\n//             <i>Panda Shop</i>\n//           </h1>\n//         </header>\n\n//         <nav>\n//           {/* ... Navigation links */}\n//         </nav>\n\n//         <div className=\"user-profile\">\n//           <h2>User Profile</h2>\n//           <p>Name: {this.state.user.name}</p>\n//           <p>Email: {this.state.user.email}</p>\n//           <p>Address: {this.state.user.address}</p>\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\n//           {/* Add more user information fields */}\n//         </div>\n\n//         <div className=\"settings-icon\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"change-password-section\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//               üîí Change Password\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//               <label>\n//                 Current Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"currentPassword\"\n//                   value={this.state.changePassword.currentPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 New Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"newPassword\"\n//                   value={this.state.changePassword.newPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 Confirm Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"confirmPassword\"\n//                   value={this.state.changePassword.confirmPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <button onClick={this.handleChangePassword}>Change Password</button>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"shipping-address\">\n//           <h2 onClick={this.toggleShippingAddresses}>\n//             Shipping Addresses <i className={`fa ${this.state.isShippingAddressesOpen ? 'fa-chevron-up' : 'fa-chevron-down'}`}></i>\n//           </h2>\n//           {this.state.isShippingAddressesOpen && (\n//             <ul>\n//               {this.state.shippingAddresses.map((address) => (\n//                 <li key={address.id}>\n//                   {address.address}\n//                   <button onClick={() => this.deleteShippingAddress(address.id)}>\n//                     Delete\n//                   </button>\n//                 </li>\n//               ))}\n//             </ul>\n//           )}\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter a new address\"\n//               value={this.state.newAddress}\n//               onChange={this.handleNewAddressChange}\n//             />\n//             <button onClick={this.addShippingAddress}>Add Address</button>\n//           </div>\n//         </div>\n\n//         <div className=\"payment-info\">\n//           <h2 onClick={this.togglePaymentDetails}>\n//             Payment Information <i className={`fa ${this.state.isPaymentDetailsOpen ? 'fa-chevron-up' : 'fa-chevron-down'}`}></i>\n//           </h2>\n//           {this.state.isPaymentDetailsOpen && (\n//             <div>\n//               {this.state.paymentInfo.map((payment, index) => (\n//                 <div key={index}>\n//                   <p>Card Type: {payment.cardType}</p>\n//                   <p>Last 4 Digits: {payment.lastFourDigits}</p>\n//                   <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\n//                 </div>\n//               ))}\n//             </div>\n//           )}\n//           <div>\n//             <input\n//               type=\"text\"\n//               name=\"cardType\"\n//               placeholder=\"Card Type\"\n//               value={this.state.newPaymentInfo.cardType}\n//               onChange={this.handlePaymentInputChange}\n//             />\n//             <input\n//               type=\"text\"\n//               name=\"lastFourDigits\"\n//               placeholder=\"Last 4 Digits\"\n//               value={this.state.newPaymentInfo.lastFourDigits}\n//               onChange={this.handlePaymentInputChange}\n//             />\n//             <button onClick={this.addPaymentInfo}>Add Payment Info</button>\n//           </div>\n//         </div>\n\n//        <footer>\n//           <p>Contact us at support@example.com</p>\n//           <p>&copy; 2023 Your E-Commerce App</p>\n//         </footer>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;\n\nimport React, { Component } from 'react';\nimport './Account.css';\nimport logo from './logo.png';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: 'John Doe',\n        email: 'johndoe@example.com',\n        address: '123 Main St, City, Country',\n        phoneNumber: '123-456-7890'\n        // Add more user data\n      },\n\n      settings: {\n        receiveNotifications: true,\n        darkMode: false,\n        language: 'English',\n        emailPreferences: {\n          promotions: true,\n          newsUpdates: true,\n          productRecommendations: true\n          // Add more email preferences here\n        }\n      },\n\n      shippingAddresses: [{\n        id: 1,\n        address: '123 Main St, City, Country'\n      }, {\n        id: 2,\n        address: '456 Elm St, City, Country'\n      }],\n      newAddress: '',\n      changePassword: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      paymentInfo: [{\n        cardType: 'Visa',\n        lastFourDigits: '1234'\n      }\n      // Add more payment info here\n      ],\n\n      newPaymentInfo: {\n        cardType: '',\n        lastFourDigits: ''\n      }\n    };\n  }\n\n  // Other methods...\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"\",\n            width: \"150px\",\n            height: \"100px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Panda Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"User Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", this.state.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", this.state.user.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", this.state.user.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Phone Number: \", this.state.user.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-password-section\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"light\",\n            id: \"password-dropdown\",\n            children: \"\\uD83D\\uDD12 Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Current Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"currentPassword\",\n                value: this.state.changePassword.currentPassword,\n                onChange: this.handlePasswordInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"newPassword\",\n                value: this.state.changePassword.newPassword,\n                onChange: this.handlePasswordInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"confirmPassword\",\n                value: this.state.changePassword.confirmPassword,\n                onChange: this.handlePasswordInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.handleChangePassword,\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipping-address\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Shipping Addresses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.shippingAddresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [address.address, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deleteShippingAddress(address.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, address.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter a new address\",\n            value: this.state.newAddress,\n            onChange: this.handleNewAddressChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addShippingAddress,\n            children: \"Add Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), this.state.paymentInfo.map((payment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Card Type: \", payment.cardType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last 4 Digits: \", payment.lastFourDigits]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 507,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.deletePaymentInfo(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"cardType\",\n            placeholder: \"Card Type\",\n            value: this.state.newPaymentInfo.cardType,\n            onChange: this.handlePaymentInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastFourDigits\",\n            placeholder: \"Last 4 Digits\",\n            value: this.state.newPaymentInfo.lastFourDigits,\n            onChange: this.handlePaymentInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.addPaymentInfo,\n            children: \"Add Payment Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Contact us at support@example.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2023 Your E-Commerce App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Account;","map":{"version":3,"names":["React","Component","logo","Dropdown","jsxDEV","_jsxDEV","Account","constructor","props","state","user","name","email","address","phoneNumber","settings","receiveNotifications","darkMode","language","emailPreferences","promotions","newsUpdates","productRecommendations","shippingAddresses","id","newAddress","changePassword","currentPassword","newPassword","confirmPassword","paymentInfo","cardType","lastFourDigits","newPaymentInfo","render","className","children","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","Menu","type","value","onChange","handlePasswordInputChange","onClick","handleChangePassword","map","deleteShippingAddress","placeholder","handleNewAddressChange","addShippingAddress","payment","index","deletePaymentInfo","handlePaymentInputChange","addPaymentInfo"],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import logo from './logo.png';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       shippingAddresses: [\r\n//         {\r\n//           id: 1,\r\n//           address: '123 Main St, City, Country',\r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           address: '456 Elm St, City, Country',\r\n//         },\r\n//       ],\r\n//       newAddress: '',\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   handleNotificationToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         receiveNotifications: !prevState.settings.receiveNotifications,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleDarkModeToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         darkMode: !prevState.settings.darkMode,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleLanguageChange = (e) => {\r\n//     const newLanguage = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         language: newLanguage,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleEmailPreferenceChange = (e) => {\r\n//     const preference = e.target.name;\r\n//     const value = e.target.checked;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         emailPreferences: {\r\n//           ...prevState.settings.emailPreferences,\r\n//           [preference]: value,\r\n//         },\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   toggleChangePassword = () => {\r\n//     this.setState((prevState) => ({\r\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n//     }));\r\n//   };\r\n\r\n//   handlePasswordInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       changePassword: {\r\n//         ...prevState.changePassword,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleChangePassword = () => {\r\n//     // Add logic to handle password change\r\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n//     if (newPassword === confirmPassword) {\r\n//       // Update the password\r\n//       // You can add your own password change logic here\r\n//       console.log('Password changed successfully');\r\n//     } else {\r\n//       console.error('New password and confirmation do not match');\r\n//     }\r\n//   };\r\n\r\n//   // Methods for handling shipping addresses\r\n//   addShippingAddress = () => {\r\n//     const { shippingAddresses, newAddress } = this.state;\r\n//     const newId = shippingAddresses.length + 1;\r\n//     const newShippingAddress = {\r\n//       id: newId,\r\n//       address: newAddress,\r\n//     };\r\n//     this.setState({\r\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n//       newAddress: '', // Clear the input field\r\n//     });\r\n//   };\r\n\r\n//   deleteShippingAddress = (id) => {\r\n//     const { shippingAddresses } = this.state;\r\n//     const updatedShippingAddresses = shippingAddresses.filter(\r\n//       (address) => address.id !== id\r\n//     );\r\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\r\n//   };\r\n\r\n//   handleNewAddressChange = (e) => {\r\n//     this.setState({ newAddress: e.target.value });\r\n//   };\r\n\r\n//   // Methods for handling payment info\r\n//   handlePaymentInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       newPaymentInfo: {\r\n//         ...prevState.newPaymentInfo,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   addPaymentInfo = () => {\r\n//     const { paymentInfo, newPaymentInfo } = this.state;\r\n//     const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\r\n//     this.setState({\r\n//       paymentInfo: updatedPaymentInfo,\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   deletePaymentInfo = (index) => {\r\n//     const { paymentInfo } = this.state;\r\n//     const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\r\n//     this.setState({ paymentInfo: updatedPaymentInfo });\r\n//   };\r\n  \r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n//         <header>\r\n//           <h1>\r\n//             <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\r\n//             <i>Panda Shop</i>\r\n//           </h1>\r\n//         </header>\r\n\r\n//         <nav>\r\n//           {/* ... Navigation links */}\r\n//         </nav>\r\n\r\n//         <div className=\"user-profile\">\r\n//           <h2>User Profile</h2>\r\n//           <p>Name: {this.state.user.name}</p>\r\n//           <p>Email: {this.state.user.email}</p>\r\n//           <p>Address: {this.state.user.address}</p>\r\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\r\n//           {/* Add more user information fields */}\r\n//         </div>\r\n\r\n//         <div className=\"settings-icon\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"change-password-section\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//               üîí Change Password\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//               <label>\r\n//                 Current Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"currentPassword\"\r\n//                   value={this.state.changePassword.currentPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 New Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"newPassword\"\r\n//                   value={this.state.changePassword.newPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 Confirm Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"confirmPassword\"\r\n//                   value={this.state.changePassword.confirmPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <button onClick={this.handleChangePassword}>Change Password</button>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"shipping-address\">\r\n//           <h2 onClick={this.toggleShippingAddresses}>\r\n//             Shipping Addresses <i className={`fa ${this.state.isShippingAddressesOpen ? 'fa-chevron-up' : 'fa-chevron-down'}`}></i>\r\n//           </h2>\r\n//           {this.state.isShippingAddressesOpen && (\r\n//             <ul>\r\n//               {this.state.shippingAddresses.map((address) => (\r\n//                 <li key={address.id}>\r\n//                   {address.address}\r\n//                   <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n//                     Delete\r\n//                   </button>\r\n//                 </li>\r\n//               ))}\r\n//             </ul>\r\n//           )}\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter a new address\"\r\n//               value={this.state.newAddress}\r\n//               onChange={this.handleNewAddressChange}\r\n//             />\r\n//             <button onClick={this.addShippingAddress}>Add Address</button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         <div className=\"payment-info\">\r\n//           <h2 onClick={this.togglePaymentDetails}>\r\n//             Payment Information <i className={`fa ${this.state.isPaymentDetailsOpen ? 'fa-chevron-up' : 'fa-chevron-down'}`}></i>\r\n//           </h2>\r\n//           {this.state.isPaymentDetailsOpen && (\r\n//             <div>\r\n//               {this.state.paymentInfo.map((payment, index) => (\r\n//                 <div key={index}>\r\n//                   <p>Card Type: {payment.cardType}</p>\r\n//                   <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n//                   <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           )}\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"cardType\"\r\n//               placeholder=\"Card Type\"\r\n//               value={this.state.newPaymentInfo.cardType}\r\n//               onChange={this.handlePaymentInputChange}\r\n//             />\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"lastFourDigits\"\r\n//               placeholder=\"Last 4 Digits\"\r\n//               value={this.state.newPaymentInfo.lastFourDigits}\r\n//               onChange={this.handlePaymentInputChange}\r\n//             />\r\n//             <button onClick={this.addPaymentInfo}>Add Payment Info</button>\r\n//           </div>\r\n//         </div>\r\n\r\n//        <footer>\r\n//           <p>Contact us at support@example.com</p>\r\n//           <p>&copy; 2023 Your E-Commerce App</p>\r\n//         </footer>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\n\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport './Account.css';\r\nimport logo from './logo.png';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'johndoe@example.com',\r\n        address: '123 Main St, City, Country',\r\n        phoneNumber: '123-456-7890',\r\n        // Add more user data\r\n      },\r\n      settings: {\r\n        receiveNotifications: true,\r\n        darkMode: false,\r\n        language: 'English',\r\n        emailPreferences: {\r\n          promotions: true,\r\n          newsUpdates: true,\r\n          productRecommendations: true,\r\n          // Add more email preferences here\r\n        },\r\n      },\r\n      shippingAddresses: [\r\n        {\r\n          id: 1,\r\n          address: '123 Main St, City, Country',\r\n        },\r\n        {\r\n          id: 2,\r\n          address: '456 Elm St, City, Country',\r\n        },\r\n      ],\r\n      newAddress: '',\r\n      changePassword: {\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n      paymentInfo: [\r\n        {\r\n          cardType: 'Visa',\r\n          lastFourDigits: '1234',\r\n        },\r\n        // Add more payment info here\r\n      ],\r\n      newPaymentInfo: {\r\n        cardType: '',\r\n        lastFourDigits: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  // Other methods...\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"account-container\">\r\n        <header>\r\n          <h1>\r\n            <img src={logo} alt=\"\" width=\"150px\" height=\"100px\" />\r\n            <i>Panda Shop</i>\r\n          </h1>\r\n        </header>\r\n\r\n        <nav>\r\n          {/* ... Navigation links */}\r\n        </nav>\r\n\r\n        <div className=\"user-profile\">\r\n          <h2>User Profile</h2>\r\n          <p>Name: {this.state.user.name}</p>\r\n          <p>Email: {this.state.user.email}</p>\r\n          <p>Address: {this.state.user.address}</p>\r\n          <p>Phone Number: {this.state.user.phoneNumber}</p>\r\n          {/* Add more user information fields */}\r\n        </div>\r\n\r\n        <div className=\"change-password-section\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n              üîí Change Password\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <label>\r\n                Current Password:\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"currentPassword\"\r\n                  value={this.state.changePassword.currentPassword}\r\n                  onChange={this.handlePasswordInputChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                New Password:\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"newPassword\"\r\n                  value={this.state.changePassword.newPassword}\r\n                  onChange={this.handlePasswordInputChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Confirm Password:\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={this.state.changePassword.confirmPassword}\r\n                  onChange={this.handlePasswordInputChange}\r\n                />\r\n              </label>\r\n              <button onClick={this.handleChangePassword}>Change Password</button>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n\r\n        <div className=\"shipping-address\">\r\n          <h2>Shipping Addresses</h2>\r\n          <ul>\r\n            {this.state.shippingAddresses.map((address) => (\r\n              <li key={address.id}>\r\n                {address.address}\r\n                <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter a new address\"\r\n              value={this.state.newAddress}\r\n              onChange={this.handleNewAddressChange}\r\n            />\r\n            <button onClick={this.addShippingAddress}>Add Address</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"payment-info\">\r\n          <h2>Payment Information</h2>\r\n          {this.state.paymentInfo.map((payment, index) => (\r\n            <div key={index}>\r\n              <p>Card Type: {payment.cardType}</p>\r\n              <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n              <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\r\n            </div>\r\n          ))}\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              name=\"cardType\"\r\n              placeholder=\"Card Type\"\r\n              value={this.state.newPaymentInfo.cardType}\r\n              onChange={this.handlePaymentInputChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"lastFourDigits\"\r\n              placeholder=\"Last 4 Digits\"\r\n              value={this.state.newPaymentInfo.lastFourDigits}\r\n              onChange={this.handlePaymentInputChange}\r\n            />\r\n            <button onClick={this.addPaymentInfo}>Add Payment Info</button>\r\n          </div>\r\n        </div>\r\n\r\n        <footer>\r\n          <p>Contact us at support@example.com</p>\r\n          <p>&copy; 2023 Your E-Commerce App</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { Component } from 'react';\n// import './Account.css';\n// import logo from './logo.png';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       shippingAddresses: [\n//         {\n//           id: 1,\n//           address: '123 Main St, City, Country',\n//         },\n//         {\n//           id: 2,\n//           address: '456 Elm St, City, Country',\n//         },\n//       ],\n//       newAddress: '',\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   handleNotificationToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         receiveNotifications: !prevState.settings.receiveNotifications,\n//       },\n//     }));\n//   };\n\n//   handleDarkModeToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         darkMode: !prevState.settings.darkMode,\n//       },\n//     }));\n//   };\n\n//   handleLanguageChange = (e) => {\n//     const newLanguage = e.target.value;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         language: newLanguage,\n//       },\n//     }));\n//   };\n\n//   handleEmailPreferenceChange = (e) => {\n//     const preference = e.target.name;\n//     const value = e.target.checked;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         emailPreferences: {\n//           ...prevState.settings.emailPreferences,\n//           [preference]: value,\n//         },\n//       },\n//     }));\n//   };\n\n//   toggleChangePassword = () => {\n//     this.setState((prevState) => ({\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\n//     }));\n//   };\n\n//   handlePasswordInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       changePassword: {\n//         ...prevState.changePassword,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   handleChangePassword = () => {\n//     // Add logic to handle password change\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\n//     if (newPassword === confirmPassword) {\n//       // Update the password\n//       // You can add your own password change logic here\n//       console.log('Password changed successfully');\n//     } else {\n//       console.error('New password and confirmation do not match');\n//     }\n//   };\n\n//   // Methods for handling shipping addresses\n//   addShippingAddress = () => {\n//     const { shippingAddresses, newAddress } = this.state;\n//     const newId = shippingAddresses.length + 1;\n//     const newShippingAddress = {\n//       id: newId,\n//       address: newAddress,\n//     };\n//     this.setState({\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\n//       newAddress: '', // Clear the input field\n//     });\n//   };\n\n//   deleteShippingAddress = (id) => {\n//     const { shippingAddresses } = this.state;\n//     const updatedShippingAddresses = shippingAddresses.filter(\n//       (address) => address.id !== id\n//     );\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\n//   };\n\n//   handleNewAddressChange = (e) => {\n//     this.setState({ newAddress: e.target.value });\n//   };\n\n//   // Methods for handling payment info\n//   handlePaymentInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       newPaymentInfo: {\n//         ...prevState.newPaymentInfo,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   addPaymentInfo = () => {\n//     const { paymentInfo, newPaymentInfo } = this.state;\n//     const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\n//     this.setState({\n//       paymentInfo: updatedPaymentInfo,\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     });\n//   };\n\n//   deletePaymentInfo = (index) => {\n//     const { paymentInfo } = this.state;\n//     const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\n//     this.setState({ paymentInfo: updatedPaymentInfo });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n\n//         <div className=\"user-profile\">\n//           <h2>User Profile</h2>\n//           <p>Name: {this.state.user.name}</p>\n//           <p>Email: {this.state.user.email}</p>\n//           <p>Address: {this.state.user.address}</p>\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\n//           {/* Add more user information fields */}\n//         </div>\n\n//         <div className=\"settings-icon\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"change-password-section\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//               üîí Change Password\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//               <label>\n//                 Current Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"currentPassword\"\n//                   value={this.state.changePassword.currentPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 New Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"newPassword\"\n//                   value={this.state.changePassword.newPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 Confirm Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"confirmPassword\"\n//                   value={this.state.changePassword.confirmPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <button onClick={this.handleChangePassword}>Change Password</button>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"shipping-address\">\n//           <h2>Shipping Addresses</h2>\n//           <ul>\n//             {this.state.shippingAddresses.map((address) => (\n//               <li key={address.id}>\n//                 {address.address}\n//                 <button onClick={() => this.deleteShippingAddress(address.id)}>\n//                   Delete\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter a new address\"\n//               value={this.state.newAddress}\n//               onChange={this.handleNewAddressChange}\n//             />\n//             <button onClick={this.addShippingAddress}>Add Address</button>\n//           </div>\n//         </div>\n\n// <div className=\"payment-info\">\n//   <h2>Payment Information</h2>\n//   {this.state.paymentInfo.map((payment, index) => (\n//     <div key={index}>\n//       <p>Card Type: {payment.cardType}</p>\n//       <p>Last 4 Digits: {payment.lastFourDigits}</p>\n//       <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\n//     </div>\n//   ))}\n//   <div>\n//     <input\n//       type=\"text\"\n//       name=\"cardType\"\n//       placeholder=\"Card Type\"\n//       value={this.state.newPaymentInfo.cardType}\n//       onChange={this.handlePaymentInputChange}\n//     />\n//     <input\n//       type=\"text\"\n//       name=\"lastFourDigits\"\n//       placeholder=\"Last 4 Digits\"\n//       value={this.state.newPaymentInfo.lastFourDigits}\n//       onChange={this.handlePaymentInputChange}\n//     />\n//     <button onClick={this.addPaymentInfo}>Add Payment Info</button>\n//   </div>\n// </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;\n\n// import React, { Component } from 'react';\n// import './Account.css';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// // New UserProfile component\n// class UserProfile extends Component {\n//   render() {\n//     return (\n//       <div className=\"user-profile\">\n//         <h2>User Profile</h2>\n//         <p>Name: {this.props.user.name}</p>\n//         <p>Email: {this.props.user.email}</p>\n//         <p>Address: {this.props.user.address}</p>\n//         <p>Phone Number: {this.props.user.phoneNumber}</p>\n//         {/* Add more user information fields */}\n//       </div>\n//     );\n//   }\n// }\n\n// // New ChangePassword component\n// class ChangePassword extends Component {\n//   render() {\n//     return (\n//       <div className=\"change-password-section\">\n//         <Dropdown>\n//           <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//             üîí Change Password\n//           </Dropdown.Toggle>\n\n//           <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//             <label>\n//               Current Password:\n//               <input\n//                 type=\"password\"\n//                 name=\"currentPassword\"\n//                 value={this.props.changePassword.currentPassword}\n//                 onChange={this.props.handlePasswordInputChange}\n//               />\n//             </label>\n//             <label>\n//               New Password:\n//               <input\n//                 type=\"password\"\n//                 name=\"newPassword\"\n//                 value={this.props.changePassword.newPassword}\n//                 onChange={this.props.handlePasswordInputChange}\n//               />\n//             </label>\n//             <label>\n//               Confirm Password:\n//               <input\n//                 type=\"password\"\n//                 name=\"confirmPassword\"\n//                 value={this.props.changePassword.confirmPassword}\n//                 onChange={this.props.handlePasswordInputChange}\n//               />\n//             </label>\n//             <button onClick={this.props.handleChangePassword}>Change Password</button>\n//           </Dropdown.Menu>\n//         </Dropdown>\n//       </div>\n//     );\n//   }\n// }\n\n// // New ShippingAddresses component\n// class ShippingAddresses extends Component {\n//   render() {\n//     return (\n//       <div className=\"shipping-address\">\n//         <h2>Shipping Addresses</h2>\n//         <ul>\n//           {this.props.shippingAddresses.map((address) => (\n//             <li key={address.id}>\n//               {address.address}\n//               <button onClick={() => this.props.deleteShippingAddress(address.id)}>Delete</button>\n//             </li>\n//           ))}\n//         </ul>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter a new address\"\n//             value={this.props.newAddress}\n//             onChange={this.props.handleNewAddressChange}\n//           />\n//           <button onClick={this.props.addShippingAddress}>Add Address</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// // New PaymentInformation component\n// class PaymentInformation extends Component {\n//   render() {\n//     return (\n//       <div className=\"payment-info\">\n//         <h2>Payment Information</h2>\n//         {this.props.paymentInfo.map((payment, index) => (\n//           <div key={index}>\n//             <p>Card Type: {payment.cardType}</p>\n//             <p>Last 4 Digits: {payment.lastFourDigits}</p>\n//             <button onClick={() => this.props.deletePaymentInfo(index)}>Delete</button>\n//           </div>\n//         ))}\n//         <div>\n//           <input\n//             type=\"text\"\n//             name=\"cardType\"\n//             placeholder=\"Card Type\"\n//             value={this.props.newPaymentInfo.cardType}\n//             onChange={this.props.handlePaymentInputChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"lastFourDigits\"\n//             placeholder=\"Last 4 Digits\"\n//             value={this.props.newPaymentInfo.lastFourDigits}\n//             onChange={this.props.handlePaymentInputChange}\n//           />\n//           <button onClick={this.props.addPaymentInfo}>Add Payment Info</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       shippingAddresses: [\n//         {\n//           id: 1,\n//           address: '123 Main St, City, Country',\n//         },\n//         {\n//           id: 2,\n//           address: '456 Elm St, City, Country',\n//         },\n//       ],\n//       newAddress: '',\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   // ... (existing methods)\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n//         <div className=\"top-right-settings\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                   <option value=\"French\">French</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"left-column\">\n//           <UserProfile user={this.state.user} />\n//           <ChangePassword\n//             changePassword={this.state.changePassword}\n//             handlePasswordInputChange={this.handlePasswordInputChange}\n//             handleChangePassword={this.handleChangePassword}\n//           />\n//         </div>\n\n//         <div className=\"right-column\">\n//           <ShippingAddresses\n//             shippingAddresses={this.state.shippingAddresses}\n//             newAddress={this.state.newAddress}\n//             handleNewAddressChange={this.handleNewAddressChange}\n//             addShippingAddress={this.addShippingAddress}\n//             deleteShippingAddress={this.deleteShippingAddress}\n//           />\n//           <PaymentInformation\n//             paymentInfo={this.state.paymentInfo}\n//             newPaymentInfo={this.state.newPaymentInfo}\n//             handlePaymentInputChange={this.handlePaymentInputChange}\n//             addPaymentInfo={this.addPaymentInfo}\n//             deletePaymentInfo={this.deletePaymentInfo}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;","map":{"version":3,"names":[],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import logo from './logo.png';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       shippingAddresses: [\r\n//         {\r\n//           id: 1,\r\n//           address: '123 Main St, City, Country',\r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           address: '456 Elm St, City, Country',\r\n//         },\r\n//       ],\r\n//       newAddress: '',\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   handleNotificationToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         receiveNotifications: !prevState.settings.receiveNotifications,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleDarkModeToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         darkMode: !prevState.settings.darkMode,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleLanguageChange = (e) => {\r\n//     const newLanguage = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         language: newLanguage,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleEmailPreferenceChange = (e) => {\r\n//     const preference = e.target.name;\r\n//     const value = e.target.checked;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         emailPreferences: {\r\n//           ...prevState.settings.emailPreferences,\r\n//           [preference]: value,\r\n//         },\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   toggleChangePassword = () => {\r\n//     this.setState((prevState) => ({\r\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n//     }));\r\n//   };\r\n\r\n//   handlePasswordInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       changePassword: {\r\n//         ...prevState.changePassword,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleChangePassword = () => {\r\n//     // Add logic to handle password change\r\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n//     if (newPassword === confirmPassword) {\r\n//       // Update the password\r\n//       // You can add your own password change logic here\r\n//       console.log('Password changed successfully');\r\n//     } else {\r\n//       console.error('New password and confirmation do not match');\r\n//     }\r\n//   };\r\n\r\n//   // Methods for handling shipping addresses\r\n//   addShippingAddress = () => {\r\n//     const { shippingAddresses, newAddress } = this.state;\r\n//     const newId = shippingAddresses.length + 1;\r\n//     const newShippingAddress = {\r\n//       id: newId,\r\n//       address: newAddress,\r\n//     };\r\n//     this.setState({\r\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n//       newAddress: '', // Clear the input field\r\n//     });\r\n//   };\r\n\r\n//   deleteShippingAddress = (id) => {\r\n//     const { shippingAddresses } = this.state;\r\n//     const updatedShippingAddresses = shippingAddresses.filter(\r\n//       (address) => address.id !== id\r\n//     );\r\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\r\n//   };\r\n\r\n//   handleNewAddressChange = (e) => {\r\n//     this.setState({ newAddress: e.target.value });\r\n//   };\r\n\r\n//   // Methods for handling payment info\r\n//   handlePaymentInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       newPaymentInfo: {\r\n//         ...prevState.newPaymentInfo,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   addPaymentInfo = () => {\r\n//     const { paymentInfo, newPaymentInfo } = this.state;\r\n//     const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\r\n//     this.setState({\r\n//       paymentInfo: updatedPaymentInfo,\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   deletePaymentInfo = (index) => {\r\n//     const { paymentInfo } = this.state;\r\n//     const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\r\n//     this.setState({ paymentInfo: updatedPaymentInfo });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n       \r\n\r\n       \r\n\r\n//         <div className=\"user-profile\">\r\n//           <h2>User Profile</h2>\r\n//           <p>Name: {this.state.user.name}</p>\r\n//           <p>Email: {this.state.user.email}</p>\r\n//           <p>Address: {this.state.user.address}</p>\r\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\r\n//           {/* Add more user information fields */}\r\n//         </div>\r\n\r\n//         <div className=\"settings-icon\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"change-password-section\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//               üîí Change Password\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//               <label>\r\n//                 Current Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"currentPassword\"\r\n//                   value={this.state.changePassword.currentPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 New Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"newPassword\"\r\n//                   value={this.state.changePassword.newPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 Confirm Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"confirmPassword\"\r\n//                   value={this.state.changePassword.confirmPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <button onClick={this.handleChangePassword}>Change Password</button>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"shipping-address\">\r\n//           <h2>Shipping Addresses</h2>\r\n//           <ul>\r\n//             {this.state.shippingAddresses.map((address) => (\r\n//               <li key={address.id}>\r\n//                 {address.address}\r\n//                 <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter a new address\"\r\n//               value={this.state.newAddress}\r\n//               onChange={this.handleNewAddressChange}\r\n//             />\r\n//             <button onClick={this.addShippingAddress}>Add Address</button>\r\n//           </div>\r\n//         </div>\r\n\r\n// <div className=\"payment-info\">\r\n//   <h2>Payment Information</h2>\r\n//   {this.state.paymentInfo.map((payment, index) => (\r\n//     <div key={index}>\r\n//       <p>Card Type: {payment.cardType}</p>\r\n//       <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n//       <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\r\n//     </div>\r\n//   ))}\r\n//   <div>\r\n//     <input\r\n//       type=\"text\"\r\n//       name=\"cardType\"\r\n//       placeholder=\"Card Type\"\r\n//       value={this.state.newPaymentInfo.cardType}\r\n//       onChange={this.handlePaymentInputChange}\r\n//     />\r\n//     <input\r\n//       type=\"text\"\r\n//       name=\"lastFourDigits\"\r\n//       placeholder=\"Last 4 Digits\"\r\n//       value={this.state.newPaymentInfo.lastFourDigits}\r\n//       onChange={this.handlePaymentInputChange}\r\n//     />\r\n//     <button onClick={this.addPaymentInfo}>Add Payment Info</button>\r\n//   </div>\r\n// </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\n\r\n\r\n// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// // New UserProfile component\r\n// class UserProfile extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"user-profile\">\r\n//         <h2>User Profile</h2>\r\n//         <p>Name: {this.props.user.name}</p>\r\n//         <p>Email: {this.props.user.email}</p>\r\n//         <p>Address: {this.props.user.address}</p>\r\n//         <p>Phone Number: {this.props.user.phoneNumber}</p>\r\n//         {/* Add more user information fields */}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // New ChangePassword component\r\n// class ChangePassword extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"change-password-section\">\r\n//         <Dropdown>\r\n//           <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//             üîí Change Password\r\n//           </Dropdown.Toggle>\r\n\r\n//           <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//             <label>\r\n//               Current Password:\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"currentPassword\"\r\n//                 value={this.props.changePassword.currentPassword}\r\n//                 onChange={this.props.handlePasswordInputChange}\r\n//               />\r\n//             </label>\r\n//             <label>\r\n//               New Password:\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"newPassword\"\r\n//                 value={this.props.changePassword.newPassword}\r\n//                 onChange={this.props.handlePasswordInputChange}\r\n//               />\r\n//             </label>\r\n//             <label>\r\n//               Confirm Password:\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"confirmPassword\"\r\n//                 value={this.props.changePassword.confirmPassword}\r\n//                 onChange={this.props.handlePasswordInputChange}\r\n//               />\r\n//             </label>\r\n//             <button onClick={this.props.handleChangePassword}>Change Password</button>\r\n//           </Dropdown.Menu>\r\n//         </Dropdown>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // New ShippingAddresses component\r\n// class ShippingAddresses extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"shipping-address\">\r\n//         <h2>Shipping Addresses</h2>\r\n//         <ul>\r\n//           {this.props.shippingAddresses.map((address) => (\r\n//             <li key={address.id}>\r\n//               {address.address}\r\n//               <button onClick={() => this.props.deleteShippingAddress(address.id)}>Delete</button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter a new address\"\r\n//             value={this.props.newAddress}\r\n//             onChange={this.props.handleNewAddressChange}\r\n//           />\r\n//           <button onClick={this.props.addShippingAddress}>Add Address</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // New PaymentInformation component\r\n// class PaymentInformation extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"payment-info\">\r\n//         <h2>Payment Information</h2>\r\n//         {this.props.paymentInfo.map((payment, index) => (\r\n//           <div key={index}>\r\n//             <p>Card Type: {payment.cardType}</p>\r\n//             <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n//             <button onClick={() => this.props.deletePaymentInfo(index)}>Delete</button>\r\n//           </div>\r\n//         ))}\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"cardType\"\r\n//             placeholder=\"Card Type\"\r\n//             value={this.props.newPaymentInfo.cardType}\r\n//             onChange={this.props.handlePaymentInputChange}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"lastFourDigits\"\r\n//             placeholder=\"Last 4 Digits\"\r\n//             value={this.props.newPaymentInfo.lastFourDigits}\r\n//             onChange={this.props.handlePaymentInputChange}\r\n//           />\r\n//           <button onClick={this.props.addPaymentInfo}>Add Payment Info</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       shippingAddresses: [\r\n//         {\r\n//           id: 1,\r\n//           address: '123 Main St, City, Country',\r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           address: '456 Elm St, City, Country',\r\n//         },\r\n//       ],\r\n//       newAddress: '',\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   // ... (existing methods)\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n//         <div className=\"top-right-settings\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                   <option value=\"French\">French</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"left-column\">\r\n//           <UserProfile user={this.state.user} />\r\n//           <ChangePassword\r\n//             changePassword={this.state.changePassword}\r\n//             handlePasswordInputChange={this.handlePasswordInputChange}\r\n//             handleChangePassword={this.handleChangePassword}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"right-column\">\r\n//           <ShippingAddresses\r\n//             shippingAddresses={this.state.shippingAddresses}\r\n//             newAddress={this.state.newAddress}\r\n//             handleNewAddressChange={this.handleNewAddressChange}\r\n//             addShippingAddress={this.addShippingAddress}\r\n//             deleteShippingAddress={this.deleteShippingAddress}\r\n//           />\r\n//           <PaymentInformation\r\n//             paymentInfo={this.state.paymentInfo}\r\n//             newPaymentInfo={this.state.newPaymentInfo}\r\n//             handlePaymentInputChange={this.handlePaymentInputChange}\r\n//             addPaymentInfo={this.addPaymentInfo}\r\n//             deletePaymentInfo={this.deletePaymentInfo}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}
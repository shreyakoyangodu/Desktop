{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\OneDrive\\\\Desktop\\\\E-commerceApp-main\\\\E-commerceApp-main\\\\PandaStore(E-Commerce App)\\\\Client\\\\src\\\\pages\\\\Account.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { Component } from 'react';\n// import './Account.css';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// // New UserProfile component\n// class UserProfile extends Component {\n//   render() {\n//     return (\n//       <div className=\"user-profile\">\n//         <h2>User Profile</h2>\n//         <p>Name: {this.props.user.name}</p>\n//         <p>Email: {this.props.user.email}</p>\n//         <p>Address: {this.props.user.address}</p>\n//         <p>Phone Number: {this.props.user.phoneNumber}</p>\n//         {/* Add more user information fields */}\n//       </div>\n//     );\n//   }\n// }\n\n// // New ChangePassword component\n// class ChangePassword extends Component {\n//   render() {\n//     return (\n//       <div className=\"change-password-section\">\n//         <Dropdown>\n//           <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//             üîí Change Password\n//           </Dropdown.Toggle>\n\n//           <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//             <label>\n//               Current Password:\n//               <input\n//                 type=\"password\"\n//                 name=\"currentPassword\"\n//                 value={this.props.changePassword.currentPassword}\n//                 onChange={this.props.handlePasswordInputChange}\n//               />\n//             </label>\n//             <label>\n//               New Password:\n//               <input\n//                 type=\"password\"\n//                 name=\"newPassword\"\n//                 value={this.props.changePassword.newPassword}\n//                 onChange={this.props.handlePasswordInputChange}\n//               />\n//             </label>\n//             <label>\n//               Confirm Password:\n//               <input\n//                 type=\"password\"\n//                 name=\"confirmPassword\"\n//                 value={this.props.changePassword.confirmPassword}\n//                 onChange={this.props.handlePasswordInputChange}\n//               />\n//             </label>\n//             <button onClick={this.props.handleChangePassword}>Change Password</button>\n//           </Dropdown.Menu>\n//         </Dropdown>\n//       </div>\n//     );\n//   }\n// }\n\n// // New ShippingAddresses component\n// class ShippingAddresses extends Component {\n//   render() {\n//     return (\n//       <div className=\"shipping-address\">\n//         <h2>Shipping Addresses</h2>\n//         <ul>\n//           {this.props.shippingAddresses.map((address) => (\n//             <li key={address.id}>\n//               {address.address}\n//               <button onClick={() => this.props.deleteShippingAddress(address.id)}>Delete</button>\n//             </li>\n//           ))}\n//         </ul>\n//         <div>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter a new address\"\n//             value={this.props.newAddress}\n//             onChange={this.props.handleNewAddressChange}\n//           />\n//           <button onClick={this.props.addShippingAddress}>Add Address</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// // New PaymentInformation component\n// class PaymentInformation extends Component {\n//   render() {\n//     return (\n//       <div className=\"payment-info\">\n//         <h2>Payment Information</h2>\n//         {this.props.paymentInfo.map((payment, index) => (\n//           <div key={index}>\n//             <p>Card Type: {payment.cardType}</p>\n//             <p>Last 4 Digits: {payment.lastFourDigits}</p>\n//             <button onClick={() => this.props.deletePaymentInfo(index)}>Delete</button>\n//           </div>\n//         ))}\n//         <div>\n//           <input\n//             type=\"text\"\n//             name=\"cardType\"\n//             placeholder=\"Card Type\"\n//             value={this.props.newPaymentInfo.cardType}\n//             onChange={this.props.handlePaymentInputChange}\n//           />\n//           <input\n//             type=\"text\"\n//             name=\"lastFourDigits\"\n//             placeholder=\"Last 4 Digits\"\n//             value={this.props.newPaymentInfo.lastFourDigits}\n//             onChange={this.props.handlePaymentInputChange}\n//           />\n//           <button onClick={this.props.addPaymentInfo}>Add Payment Info</button>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       shippingAddresses: [\n//         {\n//           id: 1,\n//           address: '123 Main St, City, Country',\n//         },\n//         {\n//           id: 2,\n//           address: '456 Elm St, City, Country',\n//         },\n//       ],\n//       newAddress: '',\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   // ... (existing methods)\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n//         <div className=\"top-right-settings\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                   <option value=\"French\">French</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"left-column\">\n//           <UserProfile user={this.state.user} />\n//           <ChangePassword\n//             changePassword={this.state.changePassword}\n//             handlePasswordInputChange={this.handlePasswordInputChange}\n//             handleChangePassword={this.handleChangePassword}\n//           />\n//         </div>\n\n//         <div className=\"right-column\">\n//           <ShippingAddresses\n//             shippingAddresses={this.state.shippingAddresses}\n//             newAddress={this.state.newAddress}\n//             handleNewAddressChange={this.handleNewAddressChange}\n//             addShippingAddress={this.addShippingAddress}\n//             deleteShippingAddress={this.deleteShippingAddress}\n//           />\n//           <PaymentInformation\n//             paymentInfo={this.state.paymentInfo}\n//             newPaymentInfo={this.state.newPaymentInfo}\n//             handlePaymentInputChange={this.handlePaymentInputChange}\n//             addPaymentInfo={this.addPaymentInfo}\n//             deletePaymentInfo={this.deletePaymentInfo}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;\n\n// Existing imports...\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: 'John Doe',\n        email: 'johndoe@example.com',\n        address: '123 Main St, City, Country',\n        phoneNumber: '123-456-7890'\n        // Add more user data\n      },\n\n      settings: {\n        receiveNotifications: true,\n        darkMode: false,\n        language: 'English',\n        emailPreferences: {\n          promotions: true,\n          newsUpdates: true,\n          productRecommendations: true\n          // Add more email preferences here\n        }\n      },\n\n      combinedInfo: {\n        shippingAddresses: [{\n          id: 1,\n          address: '123 Main St, City, Country'\n        }, {\n          id: 2,\n          address: '456 Elm St, City, Country'\n        }],\n        newAddress: '',\n        paymentInfo: [],\n        // Initialize with an empty array or preloaded payment info\n        newPaymentInfo: {\n          cardType: '',\n          lastFourDigits: ''\n        }\n      },\n      changePassword: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      isChangePasswordVisible: false\n    };\n  }\n\n  // Methods for handling user settings\n  // ... (existing methods)\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-right-settings\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"light\",\n            id: \"settings-dropdown\",\n            children: \"\\u2699\\uFE0F Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Receive Notifications:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.settings.receiveNotifications,\n                onChange: this.handleNotificationToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Dark Mode:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.settings.darkMode,\n                onChange: this.handleDarkModeToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Language:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: this.state.settings.language,\n                onChange: this.handleLanguageChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"English\",\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spanish\",\n                  children: \"Spanish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"French\",\n                  children: \"French\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n          user: this.state.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChangePassword, {\n          changePassword: this.state.changePassword,\n          handlePasswordInputChange: this.handlePasswordInputChange,\n          handleChangePassword: this.handleChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combined-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Combined Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.state.combinedInfo.shippingAddresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [address.address, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.deleteShippingAddress(address.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this)]\n            }, address.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter a new address\",\n              value: this.state.combinedInfo.newAddress,\n              onChange: this.handleNewAddressChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addShippingAddress,\n              children: \"Add Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), this.state.combinedInfo.paymentInfo.map((payment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Card Type: \", payment.cardType]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Last 4 Digits: \", payment.lastFourDigits]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.deletePaymentInfo(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cardType\",\n              placeholder: \"Card Type\",\n              value: this.state.combinedInfo.newPaymentInfo.cardType,\n              onChange: this.handlePaymentInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"lastFourDigits\",\n              placeholder: \"Last 4 Digits\",\n              value: this.state.combinedInfo.newPaymentInfo.lastFourDigits,\n              onChange: this.handlePaymentInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.addPaymentInfo,\n              children: \"Add Payment Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Account;","map":{"version":3,"names":["Account","Component","constructor","props","state","user","name","email","address","phoneNumber","settings","receiveNotifications","darkMode","language","emailPreferences","promotions","newsUpdates","productRecommendations","combinedInfo","shippingAddresses","id","newAddress","paymentInfo","newPaymentInfo","cardType","lastFourDigits","changePassword","currentPassword","newPassword","confirmPassword","isChangePasswordVisible","render","_jsxDEV","className","children","Dropdown","Toggle","variant","fileName","_jsxFileName","lineNumber","columnNumber","Menu","type","checked","onChange","handleNotificationToggle","handleDarkModeToggle","value","handleLanguageChange","UserProfile","ChangePassword","handlePasswordInputChange","handleChangePassword","map","onClick","deleteShippingAddress","placeholder","handleNewAddressChange","addShippingAddress","payment","index","deletePaymentInfo","handlePaymentInputChange","addPaymentInfo"],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["\r\n\r\n// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// // New UserProfile component\r\n// class UserProfile extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"user-profile\">\r\n//         <h2>User Profile</h2>\r\n//         <p>Name: {this.props.user.name}</p>\r\n//         <p>Email: {this.props.user.email}</p>\r\n//         <p>Address: {this.props.user.address}</p>\r\n//         <p>Phone Number: {this.props.user.phoneNumber}</p>\r\n//         {/* Add more user information fields */}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // New ChangePassword component\r\n// class ChangePassword extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"change-password-section\">\r\n//         <Dropdown>\r\n//           <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//             üîí Change Password\r\n//           </Dropdown.Toggle>\r\n\r\n//           <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//             <label>\r\n//               Current Password:\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"currentPassword\"\r\n//                 value={this.props.changePassword.currentPassword}\r\n//                 onChange={this.props.handlePasswordInputChange}\r\n//               />\r\n//             </label>\r\n//             <label>\r\n//               New Password:\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"newPassword\"\r\n//                 value={this.props.changePassword.newPassword}\r\n//                 onChange={this.props.handlePasswordInputChange}\r\n//               />\r\n//             </label>\r\n//             <label>\r\n//               Confirm Password:\r\n//               <input\r\n//                 type=\"password\"\r\n//                 name=\"confirmPassword\"\r\n//                 value={this.props.changePassword.confirmPassword}\r\n//                 onChange={this.props.handlePasswordInputChange}\r\n//               />\r\n//             </label>\r\n//             <button onClick={this.props.handleChangePassword}>Change Password</button>\r\n//           </Dropdown.Menu>\r\n//         </Dropdown>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // New ShippingAddresses component\r\n// class ShippingAddresses extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"shipping-address\">\r\n//         <h2>Shipping Addresses</h2>\r\n//         <ul>\r\n//           {this.props.shippingAddresses.map((address) => (\r\n//             <li key={address.id}>\r\n//               {address.address}\r\n//               <button onClick={() => this.props.deleteShippingAddress(address.id)}>Delete</button>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Enter a new address\"\r\n//             value={this.props.newAddress}\r\n//             onChange={this.props.handleNewAddressChange}\r\n//           />\r\n//           <button onClick={this.props.addShippingAddress}>Add Address</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// // New PaymentInformation component\r\n// class PaymentInformation extends Component {\r\n//   render() {\r\n//     return (\r\n//       <div className=\"payment-info\">\r\n//         <h2>Payment Information</h2>\r\n//         {this.props.paymentInfo.map((payment, index) => (\r\n//           <div key={index}>\r\n//             <p>Card Type: {payment.cardType}</p>\r\n//             <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n//             <button onClick={() => this.props.deletePaymentInfo(index)}>Delete</button>\r\n//           </div>\r\n//         ))}\r\n//         <div>\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"cardType\"\r\n//             placeholder=\"Card Type\"\r\n//             value={this.props.newPaymentInfo.cardType}\r\n//             onChange={this.props.handlePaymentInputChange}\r\n//           />\r\n//           <input\r\n//             type=\"text\"\r\n//             name=\"lastFourDigits\"\r\n//             placeholder=\"Last 4 Digits\"\r\n//             value={this.props.newPaymentInfo.lastFourDigits}\r\n//             onChange={this.props.handlePaymentInputChange}\r\n//           />\r\n//           <button onClick={this.props.addPaymentInfo}>Add Payment Info</button>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       shippingAddresses: [\r\n//         {\r\n//           id: 1,\r\n//           address: '123 Main St, City, Country',\r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           address: '456 Elm St, City, Country',\r\n//         },\r\n//       ],\r\n//       newAddress: '',\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   // ... (existing methods)\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n//         <div className=\"top-right-settings\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                   <option value=\"French\">French</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"left-column\">\r\n//           <UserProfile user={this.state.user} />\r\n//           <ChangePassword\r\n//             changePassword={this.state.changePassword}\r\n//             handlePasswordInputChange={this.handlePasswordInputChange}\r\n//             handleChangePassword={this.handleChangePassword}\r\n//           />\r\n//         </div>\r\n\r\n//         <div className=\"right-column\">\r\n//           <ShippingAddresses\r\n//             shippingAddresses={this.state.shippingAddresses}\r\n//             newAddress={this.state.newAddress}\r\n//             handleNewAddressChange={this.handleNewAddressChange}\r\n//             addShippingAddress={this.addShippingAddress}\r\n//             deleteShippingAddress={this.deleteShippingAddress}\r\n//           />\r\n//           <PaymentInformation\r\n//             paymentInfo={this.state.paymentInfo}\r\n//             newPaymentInfo={this.state.newPaymentInfo}\r\n//             handlePaymentInputChange={this.handlePaymentInputChange}\r\n//             addPaymentInfo={this.addPaymentInfo}\r\n//             deletePaymentInfo={this.deletePaymentInfo}\r\n//           />\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\n\r\n// Existing imports...\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'johndoe@example.com',\r\n        address: '123 Main St, City, Country',\r\n        phoneNumber: '123-456-7890',\r\n        // Add more user data\r\n      },\r\n      settings: {\r\n        receiveNotifications: true,\r\n        darkMode: false,\r\n        language: 'English',\r\n        emailPreferences: {\r\n          promotions: true,\r\n          newsUpdates: true,\r\n          productRecommendations: true,\r\n          // Add more email preferences here\r\n        },\r\n      },\r\n      combinedInfo: {\r\n        shippingAddresses: [\r\n          {\r\n            id: 1,\r\n            address: '123 Main St, City, Country',\r\n          },\r\n          {\r\n            id: 2,\r\n            address: '456 Elm St, City, Country',\r\n          },\r\n        ],\r\n        newAddress: '',\r\n        paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n        newPaymentInfo: {\r\n          cardType: '',\r\n          lastFourDigits: '',\r\n        },\r\n      },\r\n      changePassword: {\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n      isChangePasswordVisible: false,\r\n    };\r\n  }\r\n\r\n  // Methods for handling user settings\r\n  // ... (existing methods)\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"account-container\">\r\n        <div className=\"top-right-settings\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n              ‚öôÔ∏è Settings\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <label className=\"checkbox-label\">\r\n                Receive Notifications:{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.settings.receiveNotifications}\r\n                  onChange={this.handleNotificationToggle}\r\n                />\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                Dark Mode:{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.settings.darkMode}\r\n                  onChange={this.handleDarkModeToggle}\r\n                />\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                Language:{\" \"}\r\n                <select\r\n                  value={this.state.settings.language}\r\n                  onChange={this.handleLanguageChange}\r\n                >\r\n                  <option value=\"English\">English</option>\r\n                  <option value=\"Spanish\">Spanish</option>\r\n                  <option value=\"French\">French</option>\r\n                </select>\r\n              </label>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n\r\n        <div className=\"left-column\">\r\n          <UserProfile user={this.state.user} />\r\n          <ChangePassword\r\n            changePassword={this.state.changePassword}\r\n            handlePasswordInputChange={this.handlePasswordInputChange}\r\n            handleChangePassword={this.handleChangePassword}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"right-column\">\r\n          <div className=\"combined-section\">\r\n            <h2>Combined Information</h2>\r\n            <ul>\r\n              {this.state.combinedInfo.shippingAddresses.map((address) => (\r\n                <li key={address.id}>\r\n                  {address.address}\r\n                  <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n                    Delete\r\n                  </button>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter a new address\"\r\n                value={this.state.combinedInfo.newAddress}\r\n                onChange={this.handleNewAddressChange}\r\n              />\r\n              <button onClick={this.addShippingAddress}>Add Address</button>\r\n            </div>\r\n            {this.state.combinedInfo.paymentInfo.map((payment, index) => (\r\n              <div key={index}>\r\n                <p>Card Type: {payment.cardType}</p>\r\n                <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n                <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\r\n              </div>\r\n            ))}\r\n            <div>\r\n              <input\r\n                type=\"text\"\r\n                name=\"cardType\"\r\n                placeholder=\"Card Type\"\r\n                value={this.state.combinedInfo.newPaymentInfo.cardType}\r\n                onChange={this.handlePaymentInputChange}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                name=\"lastFourDigits\"\r\n                placeholder=\"Last 4 Digits\"\r\n                value={this.state.combinedInfo.newPaymentInfo.lastFourDigits}\r\n                onChange={this.handlePaymentInputChange}\r\n              />\r\n              <button onClick={this.addPaymentInfo}>Add Payment Info</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
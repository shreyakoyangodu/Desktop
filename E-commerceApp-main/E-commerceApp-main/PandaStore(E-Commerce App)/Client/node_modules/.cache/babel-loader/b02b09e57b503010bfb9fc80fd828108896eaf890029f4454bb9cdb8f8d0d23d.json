{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\OneDrive\\\\Desktop\\\\E-commerceApp-main\\\\E-commerceApp-main\\\\PandaStore(E-Commerce App)\\\\Client\\\\src\\\\pages\\\\Account.js\";\nimport React, { Component } from 'react';\nimport './Account.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\n// New UserProfile component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserProfile extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", this.props.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", this.props.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", this.props.user.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", this.props.user.phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass ChangePassword extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-password-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"change-password-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"button\",\n          className: \"change-password-toggle\",\n          children: \"\\uD83D\\uDD12 Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Current Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"currentPassword\",\n              value: this.props.changePassword.currentPassword,\n              onChange: this.props.handlePasswordInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"newPassword\",\n              value: this.props.changePassword.newPassword,\n              onChange: this.props.handlePasswordInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: this.props.changePassword.confirmPassword,\n              onChange: this.props.handlePasswordInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.handleChangePassword,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.handleNotificationToggle = () => {\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          receiveNotifications: !prevState.settings.receiveNotifications\n        }\n      }));\n    };\n    this.handleDarkModeToggle = () => {\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          darkMode: !prevState.settings.darkMode\n        }\n      }));\n    };\n    this.handleLanguageChange = e => {\n      const newLanguage = e.target.value;\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          language: newLanguage\n        }\n      }));\n    };\n    this.handleEmailPreferenceChange = e => {\n      const preference = e.target.name;\n      const value = e.target.checked;\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          emailPreferences: {\n            ...prevState.settings.emailPreferences,\n            [preference]: value\n          }\n        }\n      }));\n    };\n    this.toggleChangePassword = () => {\n      this.setState(prevState => ({\n        isChangePasswordVisible: !prevState.isChangePasswordVisible\n      }));\n    };\n    this.handlePasswordInputChange = e => {\n      const field = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        changePassword: {\n          ...prevState.changePassword,\n          [field]: value\n        }\n      }));\n    };\n    this.handleChangePassword = () => {\n      // Add logic to handle password change\n      const {\n        currentPassword,\n        newPassword,\n        confirmPassword\n      } = this.state.changePassword;\n      if (newPassword === confirmPassword) {\n        // Update the password\n        // You can add your own password change logic here\n        console.log('Password changed successfully');\n      } else {\n        console.error('New password and confirmation do not match');\n      }\n    };\n    // Methods for handling shipping addresses\n    this.addShippingAddress = () => {\n      const {\n        shippingAddresses,\n        newAddress\n      } = this.state;\n      const newId = shippingAddresses.length + 1;\n      const newShippingAddress = {\n        id: newId,\n        address: newAddress\n      };\n      this.setState({\n        shippingAddresses: [...shippingAddresses, newShippingAddress],\n        newAddress: '' // Clear the input field\n      });\n    };\n    this.deleteShippingAddress = id => {\n      const {\n        shippingAddresses\n      } = this.state;\n      const updatedShippingAddresses = shippingAddresses.filter(address => address.id !== id);\n      this.setState({\n        shippingAddresses: updatedShippingAddresses\n      });\n    };\n    this.handleNewAddressChange = e => {\n      this.setState({\n        newAddress: e.target.value\n      });\n    };\n    // Methods for handling payment info\n    this.handlePaymentInputChange = e => {\n      const field = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        newPaymentInfo: {\n          ...prevState.newPaymentInfo,\n          [field]: value\n        }\n      }));\n    };\n    this.addPaymentInfo = () => {\n      const {\n        paymentInfo,\n        newPaymentInfo\n      } = this.state;\n      const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\n      this.setState({\n        paymentInfo: updatedPaymentInfo,\n        newPaymentInfo: {\n          cardType: '',\n          lastFourDigits: ''\n        }\n      });\n    };\n    this.deletePaymentInfo = index => {\n      const {\n        paymentInfo\n      } = this.state;\n      const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\n      this.setState({\n        paymentInfo: updatedPaymentInfo\n      });\n    };\n    this.state = {\n      user: {\n        name: 'John Doe',\n        email: 'johndoe@example.com',\n        address: '123 Main St, City, Country',\n        phoneNumber: '123-456-7890'\n        // Add more user data\n      },\n\n      settings: {\n        receiveNotifications: true,\n        darkMode: false,\n        language: 'English',\n        emailPreferences: {\n          promotions: true,\n          newsUpdates: true,\n          productRecommendations: true\n          // Add more email preferences here\n        }\n      },\n\n      shippingAddresses: [{\n        id: 1,\n        address: '123 Main St, City, Country'\n      }, {\n        id: 2,\n        address: '456 Elm St, City, Country'\n      }],\n      newAddress: '',\n      changePassword: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      isChangePasswordVisible: false,\n      paymentInfo: [],\n      // Initialize with an empty array or preloaded payment info\n      newPaymentInfo: {\n        cardType: '',\n        lastFourDigits: ''\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-right-settings\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"light\",\n            id: \"settings-dropdown\",\n            children: \"\\u2699\\uFE0F Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Receive Notifications:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.settings.receiveNotifications,\n                onChange: this.handleNotificationToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Dark Mode:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.settings.darkMode,\n                onChange: this.handleDarkModeToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Language:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: this.state.settings.language,\n                onChange: this.handleLanguageChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"English\",\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spanish\",\n                  children: \"Spanish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"French\",\n                  children: \"French\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n          user: this.state.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChangePassword, {\n          changePassword: this.state.changePassword,\n          handlePasswordInputChange: this.handlePasswordInputChange,\n          handleChangePassword: this.handleChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Account;","map":{"version":3,"names":["React","Component","Dropdown","jsxDEV","_jsxDEV","UserProfile","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","props","user","name","email","address","phoneNumber","ChangePassword","role","type","value","changePassword","currentPassword","onChange","handlePasswordInputChange","newPassword","confirmPassword","onClick","handleChangePassword","Account","constructor","handleNotificationToggle","setState","prevState","settings","receiveNotifications","handleDarkModeToggle","darkMode","handleLanguageChange","e","newLanguage","target","language","handleEmailPreferenceChange","preference","checked","emailPreferences","toggleChangePassword","isChangePasswordVisible","field","state","console","log","error","addShippingAddress","shippingAddresses","newAddress","newId","length","newShippingAddress","id","deleteShippingAddress","updatedShippingAddresses","filter","handleNewAddressChange","handlePaymentInputChange","newPaymentInfo","addPaymentInfo","paymentInfo","updatedPaymentInfo","cardType","lastFourDigits","deletePaymentInfo","index","_","i","promotions","newsUpdates","productRecommendations","Toggle","variant","Menu"],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './Account.css';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// New UserProfile component\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"user-profile\">\r\n        <h2>User Profile</h2>\r\n        <p>Name: {this.props.user.name}</p>\r\n        <p>Email: {this.props.user.email}</p>\r\n        <p>Address: {this.props.user.address}</p>\r\n        <p>Phone Number: {this.props.user.phoneNumber}</p>\r\n        {/* Add more user information fields */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass ChangePassword extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"change-password-section\">\r\n        <div className=\"change-password-dropdown\">\r\n          <span role=\"button\" className=\"change-password-toggle\">\r\n            🔒 Change Password\r\n          </span>\r\n          <div className=\"dropdown-content\">\r\n            <label>\r\n              Current Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                value={this.props.changePassword.currentPassword}\r\n                onChange={this.props.handlePasswordInputChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              New Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                value={this.props.changePassword.newPassword}\r\n                onChange={this.props.handlePasswordInputChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Confirm Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                value={this.props.changePassword.confirmPassword}\r\n                onChange={this.props.handlePasswordInputChange}\r\n              />\r\n            </label>\r\n            <button onClick={this.props.handleChangePassword}>Change Password</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'johndoe@example.com',\r\n        address: '123 Main St, City, Country',\r\n        phoneNumber: '123-456-7890',\r\n        // Add more user data\r\n      },\r\n      settings: {\r\n        receiveNotifications: true,\r\n        darkMode: false,\r\n        language: 'English',\r\n        emailPreferences: {\r\n          promotions: true,\r\n          newsUpdates: true,\r\n          productRecommendations: true,\r\n          // Add more email preferences here\r\n        },\r\n      },\r\n      shippingAddresses: [\r\n        {\r\n          id: 1,\r\n          address: '123 Main St, City, Country',\r\n        },\r\n        {\r\n          id: 2,\r\n          address: '456 Elm St, City, Country',\r\n        },\r\n      ],\r\n      newAddress: '',\r\n      changePassword: {\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n      isChangePasswordVisible: false,\r\n      paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n      newPaymentInfo: {\r\n        cardType: '',\r\n        lastFourDigits: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleNotificationToggle = () => {\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        receiveNotifications: !prevState.settings.receiveNotifications,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleDarkModeToggle = () => {\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        darkMode: !prevState.settings.darkMode,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleLanguageChange = (e) => {\r\n    const newLanguage = e.target.value;\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        language: newLanguage,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleEmailPreferenceChange = (e) => {\r\n    const preference = e.target.name;\r\n    const value = e.target.checked;\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        emailPreferences: {\r\n          ...prevState.settings.emailPreferences,\r\n          [preference]: value,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  toggleChangePassword = () => {\r\n    this.setState((prevState) => ({\r\n      isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n    }));\r\n  };\r\n\r\n  handlePasswordInputChange = (e) => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      changePassword: {\r\n        ...prevState.changePassword,\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleChangePassword = () => {\r\n    // Add logic to handle password change\r\n    const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n    if (newPassword === confirmPassword) {\r\n      // Update the password\r\n      // You can add your own password change logic here\r\n      console.log('Password changed successfully');\r\n    } else {\r\n      console.error('New password and confirmation do not match');\r\n    }\r\n  };\r\n\r\n  // Methods for handling shipping addresses\r\n  addShippingAddress = () => {\r\n    const { shippingAddresses, newAddress } = this.state;\r\n    const newId = shippingAddresses.length + 1;\r\n    const newShippingAddress = {\r\n      id: newId,\r\n      address: newAddress,\r\n    };\r\n    this.setState({\r\n      shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n      newAddress: '', // Clear the input field\r\n    });\r\n  };\r\n\r\n  deleteShippingAddress = (id) => {\r\n    const { shippingAddresses } = this.state;\r\n    const updatedShippingAddresses = shippingAddresses.filter(\r\n      (address) => address.id !== id\r\n    );\r\n    this.setState({ shippingAddresses: updatedShippingAddresses });\r\n  };\r\n\r\n  handleNewAddressChange = (e) => {\r\n    this.setState({ newAddress: e.target.value });\r\n  };\r\n\r\n  // Methods for handling payment info\r\n  handlePaymentInputChange = (e) => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      newPaymentInfo: {\r\n        ...prevState.newPaymentInfo,\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  addPaymentInfo = () => {\r\n    const { paymentInfo, newPaymentInfo } = this.state;\r\n    const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\r\n    this.setState({\r\n      paymentInfo: updatedPaymentInfo,\r\n      newPaymentInfo: {\r\n        cardType: '',\r\n        lastFourDigits: '',\r\n      },\r\n    });\r\n  };\r\n\r\n  deletePaymentInfo = (index) => {\r\n    const { paymentInfo } = this.state;\r\n    const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\r\n    this.setState({ paymentInfo: updatedPaymentInfo });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"account-container\">\r\n        <div className=\"top-right-settings\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n              ⚙️ Settings\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <label className=\"checkbox-label\">\r\n                Receive Notifications:{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.settings.receiveNotifications}\r\n                  onChange={this.handleNotificationToggle}\r\n                />\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                Dark Mode:{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.settings.darkMode}\r\n                  onChange={this.handleDarkModeToggle}\r\n                />\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                Language:{\" \"}\r\n                <select\r\n                  value={this.state.settings.language}\r\n                  onChange={this.handleLanguageChange}\r\n                >\r\n                  <option value=\"English\">English</option>\r\n                  <option value=\"Spanish\">Spanish</option>\r\n                  <option value=\"French\">French</option>\r\n                </select>\r\n              </label>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n\r\n        <div className=\"left-column\">\r\n          <UserProfile user={this.state.user} />\r\n          <ChangePassword\r\n            changePassword={this.state.changePassword}\r\n            handlePasswordInputChange={this.handlePasswordInputChange}\r\n            handleChangePassword={this.handleChangePassword}\r\n          />\r\n        </div>\r\n\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\OneDrive\\\\Desktop\\\\E-commerceApp-main\\\\E-commerceApp-main\\\\PandaStore(E-Commerce App)\\\\Client\\\\src\\\\pages\\\\Account.js\";\n// import React, { Component } from 'react';\n// import './Account.css';\n// import logo from './logo.png';\n// import Dropdown from 'react-bootstrap/Dropdown';\n\n// class Account extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       user: {\n//         name: 'John Doe',\n//         email: 'johndoe@example.com',\n//         address: '123 Main St, City, Country',\n//         phoneNumber: '123-456-7890',\n//         // Add more user data\n//       },\n//       settings: {\n//         receiveNotifications: true,\n//         darkMode: false,\n//         language: 'English',\n//         emailPreferences: {\n//           promotions: true,\n//           newsUpdates: true,\n//           productRecommendations: true,\n//           // Add more email preferences here\n//         },\n//       },\n//       shippingAddresses: [\n//         {\n//           id: 1,\n//           address: '123 Main St, City, Country',\n//         },\n//         {\n//           id: 2,\n//           address: '456 Elm St, City, Country',\n//         },\n//       ],\n//       newAddress: '',\n//       changePassword: {\n//         currentPassword: '',\n//         newPassword: '',\n//         confirmPassword: '',\n//       },\n//       isChangePasswordVisible: false,\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     };\n//   }\n\n//   // Methods for handling user settings\n//   handleNotificationToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         receiveNotifications: !prevState.settings.receiveNotifications,\n//       },\n//     }));\n//   };\n\n//   handleDarkModeToggle = () => {\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         darkMode: !prevState.settings.darkMode,\n//       },\n//     }));\n//   };\n\n//   handleLanguageChange = (e) => {\n//     const newLanguage = e.target.value;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         language: newLanguage,\n//       },\n//     }));\n//   };\n\n//   handleEmailPreferenceChange = (e) => {\n//     const preference = e.target.name;\n//     const value = e.target.checked;\n//     this.setState((prevState) => ({\n//       settings: {\n//         ...prevState.settings,\n//         emailPreferences: {\n//           ...prevState.settings.emailPreferences,\n//           [preference]: value,\n//         },\n//       },\n//     }));\n//   };\n\n//   toggleChangePassword = () => {\n//     this.setState((prevState) => ({\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\n//     }));\n//   };\n\n//   handlePasswordInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       changePassword: {\n//         ...prevState.changePassword,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   handleChangePassword = () => {\n//     // Add logic to handle password change\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\n//     if (newPassword === confirmPassword) {\n//       // Update the password\n//       // You can add your own password change logic here\n//       console.log('Password changed successfully');\n//     } else {\n//       console.error('New password and confirmation do not match');\n//     }\n//   };\n\n//   // Methods for handling shipping addresses\n//   addShippingAddress = () => {\n//     const { shippingAddresses, newAddress } = this.state;\n//     const newId = shippingAddresses.length + 1;\n//     const newShippingAddress = {\n//       id: newId,\n//       address: newAddress,\n//     };\n//     this.setState({\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\n//       newAddress: '', // Clear the input field\n//     });\n//   };\n\n//   deleteShippingAddress = (id) => {\n//     const { shippingAddresses } = this.state;\n//     const updatedShippingAddresses = shippingAddresses.filter(\n//       (address) => address.id !== id\n//     );\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\n//   };\n\n//   handleNewAddressChange = (e) => {\n//     this.setState({ newAddress: e.target.value });\n//   };\n\n//   // Methods for handling payment info\n//   handlePaymentInputChange = (e) => {\n//     const field = e.target.name;\n//     const value = e.target.value;\n//     this.setState((prevState) => ({\n//       newPaymentInfo: {\n//         ...prevState.newPaymentInfo,\n//         [field]: value,\n//       },\n//     }));\n//   };\n\n//   addPaymentInfo = () => {\n//     const { paymentInfo, newPaymentInfo } = this.state;\n//     const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\n//     this.setState({\n//       paymentInfo: updatedPaymentInfo,\n//       newPaymentInfo: {\n//         cardType: '',\n//         lastFourDigits: '',\n//       },\n//     });\n//   };\n\n//   deletePaymentInfo = (index) => {\n//     const { paymentInfo } = this.state;\n//     const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\n//     this.setState({ paymentInfo: updatedPaymentInfo });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"account-container\">\n\n//         <div className=\"user-profile\">\n//           <h2>User Profile</h2>\n//           <p>Name: {this.state.user.name}</p>\n//           <p>Email: {this.state.user.email}</p>\n//           <p>Address: {this.state.user.address}</p>\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\n//           {/* Add more user information fields */}\n//         </div>\n\n//         <div className=\"settings-icon\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\n//               ‚öôÔ∏è Settings\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu>\n//               <label className=\"checkbox-label\">\n//                 Receive Notifications:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.receiveNotifications}\n//                   onChange={this.handleNotificationToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Dark Mode:{\" \"}\n//                 <input\n//                   type=\"checkbox\"\n//                   checked={this.state.settings.darkMode}\n//                   onChange={this.handleDarkModeToggle}\n//                 />\n//               </label>\n\n//               <label className=\"checkbox-label\">\n//                 Language:{\" \"}\n//                 <select\n//                   value={this.state.settings.language}\n//                   onChange={this.handleLanguageChange}\n//                 >\n//                   <option value=\"English\">English</option>\n//                   <option value=\"Spanish\">Spanish</option>\n//                 </select>\n//               </label>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"change-password-section\">\n//           <Dropdown>\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\n//               üîí Change Password\n//             </Dropdown.Toggle>\n\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\n//               <label>\n//                 Current Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"currentPassword\"\n//                   value={this.state.changePassword.currentPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 New Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"newPassword\"\n//                   value={this.state.changePassword.newPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <label>\n//                 Confirm Password:\n//                 <input\n//                   type=\"password\"\n//                   name=\"confirmPassword\"\n//                   value={this.state.changePassword.confirmPassword}\n//                   onChange={this.handlePasswordInputChange}\n//                 />\n//               </label>\n//               <button onClick={this.handleChangePassword}>Change Password</button>\n//             </Dropdown.Menu>\n//           </Dropdown>\n//         </div>\n\n//         <div className=\"shipping-address\">\n//           <h2>Shipping Addresses</h2>\n//           <ul>\n//             {this.state.shippingAddresses.map((address) => (\n//               <li key={address.id}>\n//                 {address.address}\n//                 <button onClick={() => this.deleteShippingAddress(address.id)}>\n//                   Delete\n//                 </button>\n//               </li>\n//             ))}\n//           </ul>\n//           <div>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Enter a new address\"\n//               value={this.state.newAddress}\n//               onChange={this.handleNewAddressChange}\n//             />\n//             <button onClick={this.addShippingAddress}>Add Address</button>\n//           </div>\n//         </div>\n\n// <div className=\"payment-info\">\n//   <h2>Payment Information</h2>\n//   {this.state.paymentInfo.map((payment, index) => (\n//     <div key={index}>\n//       <p>Card Type: {payment.cardType}</p>\n//       <p>Last 4 Digits: {payment.lastFourDigits}</p>\n//       <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\n//     </div>\n//   ))}\n//   <div>\n//     <input\n//       type=\"text\"\n//       name=\"cardType\"\n//       placeholder=\"Card Type\"\n//       value={this.state.newPaymentInfo.cardType}\n//       onChange={this.handlePaymentInputChange}\n//     />\n//     <input\n//       type=\"text\"\n//       name=\"lastFourDigits\"\n//       placeholder=\"Last 4 Digits\"\n//       value={this.state.newPaymentInfo.lastFourDigits}\n//       onChange={this.handlePaymentInputChange}\n//     />\n//     <button onClick={this.addPaymentInfo}>Add Payment Info</button>\n//   </div>\n// </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Account;\n\nimport React, { Component } from 'react';\nimport './Account.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport logo from './logo.png'; // Replace with your logo image path\n\n// New UserProfile component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass UserProfile extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", this.props.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", this.props.user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Address: \", this.props.user.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", this.props.user.phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// New ChangePassword component\nclass ChangePassword extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"change-password-section\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"light\",\n          id: \"password-dropdown\",\n          children: \"\\uD83D\\uDD12 Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          style: {\n            backgroundColor: 'black'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Current Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"currentPassword\",\n              value: this.props.changePassword.currentPassword,\n              onChange: this.props.handlePasswordInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"New Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"newPassword\",\n              value: this.props.changePassword.newPassword,\n              onChange: this.props.handlePasswordInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: this.props.changePassword.confirmPassword,\n              onChange: this.props.handlePasswordInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.props.handleChangePassword,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// New ShippingAddresses component\nclass ShippingAddresses extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shipping-address\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shipping Addresses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.shippingAddresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [address.address, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.props.deleteShippingAddress(address.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this)]\n        }, address.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a new address\",\n          value: this.props.newAddress,\n          onChange: this.props.handleNewAddressChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.addShippingAddress,\n          children: \"Add Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// New PaymentInformation component\nclass PaymentInformation extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), this.props.paymentInfo.map((payment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Card Type: \", payment.cardType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last 4 Digits: \", payment.lastFourDigits]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.props.deletePaymentInfo(index),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"cardType\",\n          placeholder: \"Card Type\",\n          value: this.props.newPaymentInfo.cardType,\n          onChange: this.props.handlePaymentInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastFourDigits\",\n          placeholder: \"Last 4 Digits\",\n          value: this.props.newPaymentInfo.lastFourDigits,\n          onChange: this.props.handlePaymentInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.addPaymentInfo,\n          children: \"Add Payment Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.handleNotificationToggle = () => {\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          receiveNotifications: !prevState.settings.receiveNotifications\n        }\n      }));\n    };\n    this.handleDarkModeToggle = () => {\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          darkMode: !prevState.settings.darkMode\n        }\n      }));\n    };\n    this.handleLanguageChange = e => {\n      const newLanguage = e.target.value;\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          language: newLanguage\n        }\n      }));\n    };\n    this.handleEmailPreferenceChange = e => {\n      const preference = e.target.name;\n      const value = e.target.checked;\n      this.setState(prevState => ({\n        settings: {\n          ...prevState.settings,\n          emailPreferences: {\n            ...prevState.settings.emailPreferences,\n            [preference]: value\n          }\n        }\n      }));\n    };\n    this.toggleChangePassword = () => {\n      this.setState(prevState => ({\n        isChangePasswordVisible: !prevState.isChangePasswordVisible\n      }));\n    };\n    this.handlePasswordInputChange = e => {\n      const field = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        changePassword: {\n          ...prevState.changePassword,\n          [field]: value\n        }\n      }));\n    };\n    this.handleChangePassword = () => {\n      // Add logic to handle password change\n      const {\n        currentPassword,\n        newPassword,\n        confirmPassword\n      } = this.state.changePassword;\n      if (newPassword === confirmPassword) {\n        // Update the password\n        // You can add your own password change logic here\n        console.log('Password changed successfully');\n      } else {\n        console.error('New password and confirmation do not match');\n      }\n    };\n    // Methods for handling shipping addresses\n    this.addShippingAddress = () => {\n      const {\n        shippingAddresses,\n        newAddress\n      } = this.state;\n      const newId = shippingAddresses.length + 1;\n      const newShippingAddress = {\n        id: newId,\n        address: newAddress\n      };\n      this.setState({\n        shippingAddresses: [...shippingAddresses, newShippingAddress],\n        newAddress: '' // Clear the input field\n      });\n    };\n    this.deleteShippingAddress = id => {\n      const {\n        shippingAddresses\n      } = this.state;\n      const updatedShippingAddresses = shippingAddresses.filter(address => address.id !== id);\n      this.setState({\n        shippingAddresses: updatedShippingAddresses\n      });\n    };\n    this.handleNewAddressChange = e => {\n      this.setState({\n        newAddress: e.target.value\n      });\n    };\n    // Methods for handling payment info\n    this.handlePaymentInputChange = e => {\n      const field = e.target.name;\n      const value = e.target.value;\n      this.setState(prevState => ({\n        newPaymentInfo: {\n          ...prevState.newPaymentInfo,\n          [field]: value\n        }\n      }));\n    };\n    this.addPaymentInfo = () => {\n      const {\n        paymentInfo,\n        newPaymentInfo\n      } = this.state;\n      const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\n      this.setState({\n        paymentInfo: updatedPaymentInfo,\n        newPaymentInfo: {\n          cardType: '',\n          lastFourDigits: ''\n        }\n      });\n    };\n    this.deletePaymentInfo = index => {\n      const {\n        paymentInfo\n      } = this.state;\n      const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\n      this.setState({\n        paymentInfo: updatedPaymentInfo\n      });\n    };\n    this.state = {\n      user: {\n        name: 'John Doe',\n        email: 'johndoe@example.com',\n        address: '123 Main St, City, Country',\n        phoneNumber: '123-456-7890'\n        // Add more user data\n      },\n\n      settings: {\n        receiveNotifications: true,\n        darkMode: false,\n        language: 'English',\n        emailPreferences: {\n          promotions: true,\n          newsUpdates: true,\n          productRecommendations: true\n          // Add more email preferences here\n        }\n      },\n\n      shippingAddresses: [{\n        id: 1,\n        address: '123 Main St, City, Country'\n      }, {\n        id: 2,\n        address: '456 Elm St, City, Country'\n      }],\n      newAddress: '',\n      changePassword: {\n        currentPassword: '',\n        newPassword: '',\n        confirmPassword: ''\n      },\n      isChangePasswordVisible: false,\n      paymentInfo: [],\n      // Initialize with an empty array or preloaded payment info\n      newPaymentInfo: {\n        cardType: '',\n        lastFourDigits: ''\n      }\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            alt: \"Your Logo\",\n            width: \"150px\",\n            height: \"100px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Panda Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/shop\",\n          children: \"Shop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/categories\",\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/account\",\n          children: \"Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-bar\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search products...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/services\",\n          children: \"Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/aboutUs\",\n          children: \"About Us\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"button\",\n          href: \"/login\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-right-settings\",\n        children: /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"light\",\n            id: \"settings-dropdown\",\n            children: \"\\u2699\\uFE0F Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Receive Notifications:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.settings.receiveNotifications,\n                onChange: this.handleNotificationToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Dark Mode:\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: this.state.settings.darkMode,\n                onChange: this.handleDarkModeToggle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 679,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"checkbox-label\",\n              children: [\"Language:\", \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: this.state.settings.language,\n                onChange: this.handleLanguageChange,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"English\",\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spanish\",\n                  children: \"Spanish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"French\",\n                  children: \"French\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 685,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(UserProfile, {\n          user: this.state.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChangePassword, {\n          changePassword: this.state.changePassword,\n          handlePasswordInputChange: this.handlePasswordInputChange,\n          handleChangePassword: this.handleChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: [/*#__PURE__*/_jsxDEV(ShippingAddresses, {\n          shippingAddresses: this.state.shippingAddresses,\n          newAddress: this.state.newAddress,\n          handleNewAddressChange: this.handleNewAddressChange,\n          addShippingAddress: this.addShippingAddress,\n          deleteShippingAddress: this.deleteShippingAddress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PaymentInformation, {\n          paymentInfo: this.state.paymentInfo,\n          newPaymentInfo: this.state.newPaymentInfo,\n          handlePaymentInputChange: this.handlePaymentInputChange,\n          addPaymentInfo: this.addPaymentInfo,\n          deletePaymentInfo: this.deletePaymentInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Contact us at support@example.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2023 Your E-Commerce App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Account;","map":{"version":3,"names":["React","Component","Dropdown","logo","jsxDEV","_jsxDEV","UserProfile","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","props","user","name","email","address","phoneNumber","ChangePassword","Toggle","variant","id","Menu","style","backgroundColor","type","value","changePassword","currentPassword","onChange","handlePasswordInputChange","newPassword","confirmPassword","onClick","handleChangePassword","ShippingAddresses","shippingAddresses","map","deleteShippingAddress","placeholder","newAddress","handleNewAddressChange","addShippingAddress","PaymentInformation","paymentInfo","payment","index","cardType","lastFourDigits","deletePaymentInfo","newPaymentInfo","handlePaymentInputChange","addPaymentInfo","Account","constructor","handleNotificationToggle","setState","prevState","settings","receiveNotifications","handleDarkModeToggle","darkMode","handleLanguageChange","e","newLanguage","target","language","handleEmailPreferenceChange","preference","checked","emailPreferences","toggleChangePassword","isChangePasswordVisible","field","state","console","log","error","newId","length","newShippingAddress","updatedShippingAddresses","filter","updatedPaymentInfo","_","i","promotions","newsUpdates","productRecommendations","src","alt","width","height","href"],"sources":["C:/Users/shrey/OneDrive/Desktop/E-commerceApp-main/E-commerceApp-main/PandaStore(E-Commerce App)/Client/src/pages/Account.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n// import './Account.css';\r\n// import logo from './logo.png';\r\n// import Dropdown from 'react-bootstrap/Dropdown';\r\n\r\n// class Account extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       user: {\r\n//         name: 'John Doe',\r\n//         email: 'johndoe@example.com',\r\n//         address: '123 Main St, City, Country',\r\n//         phoneNumber: '123-456-7890',\r\n//         // Add more user data\r\n//       },\r\n//       settings: {\r\n//         receiveNotifications: true,\r\n//         darkMode: false,\r\n//         language: 'English',\r\n//         emailPreferences: {\r\n//           promotions: true,\r\n//           newsUpdates: true,\r\n//           productRecommendations: true,\r\n//           // Add more email preferences here\r\n//         },\r\n//       },\r\n//       shippingAddresses: [\r\n//         {\r\n//           id: 1,\r\n//           address: '123 Main St, City, Country',\r\n//         },\r\n//         {\r\n//           id: 2,\r\n//           address: '456 Elm St, City, Country',\r\n//         },\r\n//       ],\r\n//       newAddress: '',\r\n//       changePassword: {\r\n//         currentPassword: '',\r\n//         newPassword: '',\r\n//         confirmPassword: '',\r\n//       },\r\n//       isChangePasswordVisible: false,\r\n//       paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     };\r\n//   }\r\n\r\n//   // Methods for handling user settings\r\n//   handleNotificationToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         receiveNotifications: !prevState.settings.receiveNotifications,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleDarkModeToggle = () => {\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         darkMode: !prevState.settings.darkMode,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleLanguageChange = (e) => {\r\n//     const newLanguage = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         language: newLanguage,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleEmailPreferenceChange = (e) => {\r\n//     const preference = e.target.name;\r\n//     const value = e.target.checked;\r\n//     this.setState((prevState) => ({\r\n//       settings: {\r\n//         ...prevState.settings,\r\n//         emailPreferences: {\r\n//           ...prevState.settings.emailPreferences,\r\n//           [preference]: value,\r\n//         },\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   toggleChangePassword = () => {\r\n//     this.setState((prevState) => ({\r\n//       isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n//     }));\r\n//   };\r\n\r\n//   handlePasswordInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       changePassword: {\r\n//         ...prevState.changePassword,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   handleChangePassword = () => {\r\n//     // Add logic to handle password change\r\n//     const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n//     if (newPassword === confirmPassword) {\r\n//       // Update the password\r\n//       // You can add your own password change logic here\r\n//       console.log('Password changed successfully');\r\n//     } else {\r\n//       console.error('New password and confirmation do not match');\r\n//     }\r\n//   };\r\n\r\n//   // Methods for handling shipping addresses\r\n//   addShippingAddress = () => {\r\n//     const { shippingAddresses, newAddress } = this.state;\r\n//     const newId = shippingAddresses.length + 1;\r\n//     const newShippingAddress = {\r\n//       id: newId,\r\n//       address: newAddress,\r\n//     };\r\n//     this.setState({\r\n//       shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n//       newAddress: '', // Clear the input field\r\n//     });\r\n//   };\r\n\r\n//   deleteShippingAddress = (id) => {\r\n//     const { shippingAddresses } = this.state;\r\n//     const updatedShippingAddresses = shippingAddresses.filter(\r\n//       (address) => address.id !== id\r\n//     );\r\n//     this.setState({ shippingAddresses: updatedShippingAddresses });\r\n//   };\r\n\r\n//   handleNewAddressChange = (e) => {\r\n//     this.setState({ newAddress: e.target.value });\r\n//   };\r\n\r\n//   // Methods for handling payment info\r\n//   handlePaymentInputChange = (e) => {\r\n//     const field = e.target.name;\r\n//     const value = e.target.value;\r\n//     this.setState((prevState) => ({\r\n//       newPaymentInfo: {\r\n//         ...prevState.newPaymentInfo,\r\n//         [field]: value,\r\n//       },\r\n//     }));\r\n//   };\r\n\r\n//   addPaymentInfo = () => {\r\n//     const { paymentInfo, newPaymentInfo } = this.state;\r\n//     const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\r\n//     this.setState({\r\n//       paymentInfo: updatedPaymentInfo,\r\n//       newPaymentInfo: {\r\n//         cardType: '',\r\n//         lastFourDigits: '',\r\n//       },\r\n//     });\r\n//   };\r\n\r\n//   deletePaymentInfo = (index) => {\r\n//     const { paymentInfo } = this.state;\r\n//     const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\r\n//     this.setState({ paymentInfo: updatedPaymentInfo });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div className=\"account-container\">\r\n       \r\n\r\n       \r\n\r\n//         <div className=\"user-profile\">\r\n//           <h2>User Profile</h2>\r\n//           <p>Name: {this.state.user.name}</p>\r\n//           <p>Email: {this.state.user.email}</p>\r\n//           <p>Address: {this.state.user.address}</p>\r\n//           <p>Phone Number: {this.state.user.phoneNumber}</p>\r\n//           {/* Add more user information fields */}\r\n//         </div>\r\n\r\n//         <div className=\"settings-icon\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n//               ‚öôÔ∏è Settings\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu>\r\n//               <label className=\"checkbox-label\">\r\n//                 Receive Notifications:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.receiveNotifications}\r\n//                   onChange={this.handleNotificationToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Dark Mode:{\" \"}\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   checked={this.state.settings.darkMode}\r\n//                   onChange={this.handleDarkModeToggle}\r\n//                 />\r\n//               </label>\r\n\r\n//               <label className=\"checkbox-label\">\r\n//                 Language:{\" \"}\r\n//                 <select\r\n//                   value={this.state.settings.language}\r\n//                   onChange={this.handleLanguageChange}\r\n//                 >\r\n//                   <option value=\"English\">English</option>\r\n//                   <option value=\"Spanish\">Spanish</option>\r\n//                 </select>\r\n//               </label>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"change-password-section\">\r\n//           <Dropdown>\r\n//             <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n//               üîí Change Password\r\n//             </Dropdown.Toggle>\r\n\r\n//             <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n//               <label>\r\n//                 Current Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"currentPassword\"\r\n//                   value={this.state.changePassword.currentPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 New Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"newPassword\"\r\n//                   value={this.state.changePassword.newPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <label>\r\n//                 Confirm Password:\r\n//                 <input\r\n//                   type=\"password\"\r\n//                   name=\"confirmPassword\"\r\n//                   value={this.state.changePassword.confirmPassword}\r\n//                   onChange={this.handlePasswordInputChange}\r\n//                 />\r\n//               </label>\r\n//               <button onClick={this.handleChangePassword}>Change Password</button>\r\n//             </Dropdown.Menu>\r\n//           </Dropdown>\r\n//         </div>\r\n\r\n//         <div className=\"shipping-address\">\r\n//           <h2>Shipping Addresses</h2>\r\n//           <ul>\r\n//             {this.state.shippingAddresses.map((address) => (\r\n//               <li key={address.id}>\r\n//                 {address.address}\r\n//                 <button onClick={() => this.deleteShippingAddress(address.id)}>\r\n//                   Delete\r\n//                 </button>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//           <div>\r\n//             <input\r\n//               type=\"text\"\r\n//               placeholder=\"Enter a new address\"\r\n//               value={this.state.newAddress}\r\n//               onChange={this.handleNewAddressChange}\r\n//             />\r\n//             <button onClick={this.addShippingAddress}>Add Address</button>\r\n//           </div>\r\n//         </div>\r\n\r\n// <div className=\"payment-info\">\r\n//   <h2>Payment Information</h2>\r\n//   {this.state.paymentInfo.map((payment, index) => (\r\n//     <div key={index}>\r\n//       <p>Card Type: {payment.cardType}</p>\r\n//       <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n//       <button onClick={() => this.deletePaymentInfo(index)}>Delete</button>\r\n//     </div>\r\n//   ))}\r\n//   <div>\r\n//     <input\r\n//       type=\"text\"\r\n//       name=\"cardType\"\r\n//       placeholder=\"Card Type\"\r\n//       value={this.state.newPaymentInfo.cardType}\r\n//       onChange={this.handlePaymentInputChange}\r\n//     />\r\n//     <input\r\n//       type=\"text\"\r\n//       name=\"lastFourDigits\"\r\n//       placeholder=\"Last 4 Digits\"\r\n//       value={this.state.newPaymentInfo.lastFourDigits}\r\n//       onChange={this.handlePaymentInputChange}\r\n//     />\r\n//     <button onClick={this.addPaymentInfo}>Add Payment Info</button>\r\n//   </div>\r\n// </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Account;\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport './Account.css';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport logo from './logo.png'; // Replace with your logo image path\r\n\r\n// New UserProfile component\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"user-profile\">\r\n        <h2>User Profile</h2>\r\n        <p>Name: {this.props.user.name}</p>\r\n        <p>Email: {this.props.user.email}</p>\r\n        <p>Address: {this.props.user.address}</p>\r\n        <p>Phone Number: {this.props.user.phoneNumber}</p>\r\n        {/* Add more user information fields */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// New ChangePassword component\r\nclass ChangePassword extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"change-password-section\">\r\n        <Dropdown>\r\n          <Dropdown.Toggle variant=\"light\" id=\"password-dropdown\">\r\n            üîí Change Password\r\n          </Dropdown.Toggle>\r\n\r\n          <Dropdown.Menu style={{ backgroundColor: 'black' }}>\r\n            <label>\r\n              Current Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"currentPassword\"\r\n                value={this.props.changePassword.currentPassword}\r\n                onChange={this.props.handlePasswordInputChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              New Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                value={this.props.changePassword.newPassword}\r\n                onChange={this.props.handlePasswordInputChange}\r\n              />\r\n            </label>\r\n            <label>\r\n              Confirm Password:\r\n              <input\r\n                type=\"password\"\r\n                name=\"confirmPassword\"\r\n                value={this.props.changePassword.confirmPassword}\r\n                onChange={this.props.handlePasswordInputChange}\r\n              />\r\n            </label>\r\n            <button onClick={this.props.handleChangePassword}>Change Password</button>\r\n          </Dropdown.Menu>\r\n        </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// New ShippingAddresses component\r\nclass ShippingAddresses extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"shipping-address\">\r\n        <h2>Shipping Addresses</h2>\r\n        <ul>\r\n          {this.props.shippingAddresses.map((address) => (\r\n            <li key={address.id}>\r\n              {address.address}\r\n              <button onClick={() => this.props.deleteShippingAddress(address.id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter a new address\"\r\n            value={this.props.newAddress}\r\n            onChange={this.props.handleNewAddressChange}\r\n          />\r\n          <button onClick={this.props.addShippingAddress}>Add Address</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// New PaymentInformation component\r\nclass PaymentInformation extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"payment-info\">\r\n        <h2>Payment Information</h2>\r\n        {this.props.paymentInfo.map((payment, index) => (\r\n          <div key={index}>\r\n            <p>Card Type: {payment.cardType}</p>\r\n            <p>Last 4 Digits: {payment.lastFourDigits}</p>\r\n            <button onClick={() => this.props.deletePaymentInfo(index)}>Delete</button>\r\n          </div>\r\n        ))}\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"cardType\"\r\n            placeholder=\"Card Type\"\r\n            value={this.props.newPaymentInfo.cardType}\r\n            onChange={this.props.handlePaymentInputChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastFourDigits\"\r\n            placeholder=\"Last 4 Digits\"\r\n            value={this.props.newPaymentInfo.lastFourDigits}\r\n            onChange={this.props.handlePaymentInputChange}\r\n          />\r\n          <button onClick={this.props.addPaymentInfo}>Add Payment Info</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Account extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: 'John Doe',\r\n        email: 'johndoe@example.com',\r\n        address: '123 Main St, City, Country',\r\n        phoneNumber: '123-456-7890',\r\n        // Add more user data\r\n      },\r\n      settings: {\r\n        receiveNotifications: true,\r\n        darkMode: false,\r\n        language: 'English',\r\n        emailPreferences: {\r\n          promotions: true,\r\n          newsUpdates: true,\r\n          productRecommendations: true,\r\n          // Add more email preferences here\r\n        },\r\n      },\r\n      shippingAddresses: [\r\n        {\r\n          id: 1,\r\n          address: '123 Main St, City, Country',\r\n        },\r\n        {\r\n          id: 2,\r\n          address: '456 Elm St, City, Country',\r\n        },\r\n      ],\r\n      newAddress: '',\r\n      changePassword: {\r\n        currentPassword: '',\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n      },\r\n      isChangePasswordVisible: false,\r\n      paymentInfo: [], // Initialize with an empty array or preloaded payment info\r\n      newPaymentInfo: {\r\n        cardType: '',\r\n        lastFourDigits: '',\r\n      },\r\n    };\r\n  }\r\n\r\n  handleNotificationToggle = () => {\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        receiveNotifications: !prevState.settings.receiveNotifications,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleDarkModeToggle = () => {\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        darkMode: !prevState.settings.darkMode,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleLanguageChange = (e) => {\r\n    const newLanguage = e.target.value;\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        language: newLanguage,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleEmailPreferenceChange = (e) => {\r\n    const preference = e.target.name;\r\n    const value = e.target.checked;\r\n    this.setState((prevState) => ({\r\n      settings: {\r\n        ...prevState.settings,\r\n        emailPreferences: {\r\n          ...prevState.settings.emailPreferences,\r\n          [preference]: value,\r\n        },\r\n      },\r\n    }));\r\n  };\r\n\r\n  toggleChangePassword = () => {\r\n    this.setState((prevState) => ({\r\n      isChangePasswordVisible: !prevState.isChangePasswordVisible,\r\n    }));\r\n  };\r\n\r\n  handlePasswordInputChange = (e) => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      changePassword: {\r\n        ...prevState.changePassword,\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleChangePassword = () => {\r\n    // Add logic to handle password change\r\n    const { currentPassword, newPassword, confirmPassword } = this.state.changePassword;\r\n    if (newPassword === confirmPassword) {\r\n      // Update the password\r\n      // You can add your own password change logic here\r\n      console.log('Password changed successfully');\r\n    } else {\r\n      console.error('New password and confirmation do not match');\r\n    }\r\n  };\r\n\r\n  // Methods for handling shipping addresses\r\n  addShippingAddress = () => {\r\n    const { shippingAddresses, newAddress } = this.state;\r\n    const newId = shippingAddresses.length + 1;\r\n    const newShippingAddress = {\r\n      id: newId,\r\n      address: newAddress,\r\n    };\r\n    this.setState({\r\n      shippingAddresses: [...shippingAddresses, newShippingAddress],\r\n      newAddress: '', // Clear the input field\r\n    });\r\n  };\r\n\r\n  deleteShippingAddress = (id) => {\r\n    const { shippingAddresses } = this.state;\r\n    const updatedShippingAddresses = shippingAddresses.filter(\r\n      (address) => address.id !== id\r\n    );\r\n    this.setState({ shippingAddresses: updatedShippingAddresses });\r\n  };\r\n\r\n  handleNewAddressChange = (e) => {\r\n    this.setState({ newAddress: e.target.value });\r\n  };\r\n\r\n  // Methods for handling payment info\r\n  handlePaymentInputChange = (e) => {\r\n    const field = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState((prevState) => ({\r\n      newPaymentInfo: {\r\n        ...prevState.newPaymentInfo,\r\n        [field]: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  addPaymentInfo = () => {\r\n    const { paymentInfo, newPaymentInfo } = this.state;\r\n    const updatedPaymentInfo = [...paymentInfo, newPaymentInfo];\r\n    this.setState({\r\n      paymentInfo: updatedPaymentInfo,\r\n      newPaymentInfo: {\r\n        cardType: '',\r\n        lastFourDigits: '',\r\n      },\r\n    });\r\n  };\r\n\r\n  deletePaymentInfo = (index) => {\r\n    const { paymentInfo } = this.state;\r\n    const updatedPaymentInfo = paymentInfo.filter((_, i) => i !== index);\r\n    this.setState({ paymentInfo: updatedPaymentInfo });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"account-container\">\r\n        <header>\r\n          <h1>\r\n            <img src={logo} alt=\"Your Logo\" width=\"150px\" height=\"100px\" />\r\n            <i>Panda Shop</i>\r\n          </h1>\r\n        </header>\r\n        <nav>\r\n          <a href=\"/\">Home</a>\r\n          <a href=\"/shop\">Shop</a>\r\n          <a href=\"/categories\">Categories</a>\r\n          <a href=\"/account\">Account</a>\r\n          <div className=\"search-bar\">\r\n            <input type=\"text\" placeholder=\"Search products...\" />\r\n            <button type=\"submit\">Search</button>\r\n          </div>\r\n          <a href=\"/services\">Services</a>\r\n          <a href=\"/aboutUs\">About Us</a>\r\n          <a href=\"#\">Chatbot</a>\r\n          <a className=\"button\" href=\"/login\">\r\n            Logout\r\n          </a>\r\n        </nav>\r\n        <div className=\"top-right-settings\">\r\n          <Dropdown>\r\n            <Dropdown.Toggle variant=\"light\" id=\"settings-dropdown\">\r\n              ‚öôÔ∏è Settings\r\n            </Dropdown.Toggle>\r\n\r\n            <Dropdown.Menu>\r\n              <label className=\"checkbox-label\">\r\n                Receive Notifications:{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.settings.receiveNotifications}\r\n                  onChange={this.handleNotificationToggle}\r\n                />\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                Dark Mode:{\" \"}\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={this.state.settings.darkMode}\r\n                  onChange={this.handleDarkModeToggle}\r\n                />\r\n              </label>\r\n              <label className=\"checkbox-label\">\r\n                Language:{\" \"}\r\n                <select\r\n                  value={this.state.settings.language}\r\n                  onChange={this.handleLanguageChange}\r\n                >\r\n                  <option value=\"English\">English</option>\r\n                  <option value=\"Spanish\">Spanish</option>\r\n                  <option value=\"French\">French</option>\r\n                </select>\r\n              </label>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </div>\r\n\r\n        <div className=\"left-column\">\r\n          <UserProfile user={this.state.user} />\r\n          <ChangePassword\r\n            changePassword={this.state.changePassword}\r\n            handlePasswordInputChange={this.handlePasswordInputChange}\r\n            handleChangePassword={this.handleChangePassword}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"right-column\">\r\n          <ShippingAddresses\r\n            shippingAddresses={this.state.shippingAddresses}\r\n            newAddress={this.state.newAddress}\r\n            handleNewAddressChange={this.handleNewAddressChange}\r\n            addShippingAddress={this.addShippingAddress}\r\n            deleteShippingAddress={this.deleteShippingAddress}\r\n          />\r\n          <PaymentInformation\r\n            paymentInfo={this.state.paymentInfo}\r\n            newPaymentInfo={this.state.newPaymentInfo}\r\n            handlePaymentInputChange={this.handlePaymentInputChange}\r\n            addPaymentInfo={this.addPaymentInfo}\r\n            deletePaymentInfo={this.deletePaymentInfo}\r\n          />\r\n        </div>\r\n\r\n        <footer>\r\n          <p>Contact us at support@example.com</p>\r\n          <p>&copy; 2023 Your E-Commerce App</p>\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}